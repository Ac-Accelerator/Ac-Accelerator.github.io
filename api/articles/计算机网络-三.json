{"title":"计算机网络(三)","uid":"0ca60c06fd1d7a39272aeb0b754b415e","slug":"计算机网络-三","date":"2022-05-16T06:14:00.000Z","updated":"2023-03-31T12:38:01.469Z","comments":true,"path":"api/articles/计算机网络-三.json","keywords":"C++,Pyhton,Java,算法","cover":"/img/network3.jpeg","content":"<h2 id=\"网络层\"><a href=\"#网络层\" class=\"headerlink\" title=\"网络层\"></a>网络层</h2><p>把分组从源端传到目的端，为分组交换网上的不同主机提供通信服务。网络层传输单位是数据报。</p>\n<h3 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h3><p><em>功能一</em>:路由选择与分组转发最佳路径<br><em>功能二</em>:异构网络互联<br><em>功能三</em>:拥塞控制（开环控制、静闭环控制）</p>\n<h3 id=\"数据交换方式\"><a href=\"#数据交换方式\" class=\"headerlink\" title=\"数据交换方式\"></a>数据交换方式</h3><h4 id=\"电路交换\"><a href=\"#电路交换\" class=\"headerlink\" title=\"电路交换\"></a>电路交换</h4><p>当两台主机要通信的时候，将建立一条物理上的链路用于通信，类似于过去的电话进行接线。</p>\n<p><em>特点：独占资源</em></p>\n<p><strong>优点:</strong></p>\n<ol>\n<li>通信时延小</li>\n<li>有序传输</li>\n<li>没有冲突</li>\n<li>实时性强</li>\n</ol>\n<p><strong>缺点:</strong></p>\n<ol>\n<li>建立连接时间长</li>\n<li>线路独占,使用效率低</li>\n<li>灵活性差</li>\n<li>无差错控制能力</li>\n</ol>\n<h4 id=\"报文交换\"><a href=\"#报文交换\" class=\"headerlink\" title=\"报文交换\"></a>报文交换</h4><p>当两个主机要通信的时候，会将报文发送到交换设备上，交换设备会先对报文进行储存，等到目标链路空闲的时候，再对报文进行转发。</p>\n<p><strong>优点</strong>：</p>\n<ol>\n<li>无需建立连接</li>\n<li>存储转发,动态分配线路</li>\n<li>线路可靠性较高</li>\n<li>线路利用率较高</li>\n<li>多目标服务（一个报文可以发往多个目标地址）</li>\n</ol>\n<p><strong>缺点</strong>：</p>\n<ol>\n<li>有存储转发时延（串行转发）</li>\n<li>报文大小不定,需要网络节点有较大缓存空间</li>\n</ol>\n<h4 id=\"分组交换\"><a href=\"#分组交换\" class=\"headerlink\" title=\"分组交换\"></a>分组交换</h4><p><em>分组</em>:把大的数据块分割成小的数据块。<br>在报文交换中,因为报文大小不定,需要网络节点有较大缓存空间。分组交换通过把大的数据块分割成小的数据块改善了这点。</p>\n<p><strong>优点</strong>：</p>\n<ol>\n<li>无需建立连接</li>\n<li>存储转发,动态分配线路</li>\n<li>线路可靠性较高</li>\n<li>线路利用率较高</li>\n<li>相对于报文交换，存储管理更容易</li>\n<li>时延比报文交换要小（并行转发）</li>\n</ol>\n<p><strong>缺点</strong>：</p>\n<ol>\n<li>有存储转发时延（相对于电路交换）</li>\n<li>需要传输额外的信息量</li>\n<li>乱序到目的主机时，要对分组排序重组</li>\n</ol>\n<h5 id=\"数据报方式（Internet正在使用的）\"><a href=\"#数据报方式（Internet正在使用的）\" class=\"headerlink\" title=\"数据报方式（Internet正在使用的）\"></a>数据报方式（Internet正在使用的）</h5><p>提供无连接服务  </p>\n<p><em>无连接服务</em>:不事先为分组的传输确定传输路径，每个分组独立确定传输路径，不同分组传输路径可能不同。</p>\n<p><em>路由器根据分组的目的地址转发分组</em>:基于路由协议/算法构建转发表、检索转发表;每个分组独立选路。</p>\n<p>不保证分组的有序到达。</p>\n<h5 id=\"虚电路方式\"><a href=\"#虚电路方式\" class=\"headerlink\" title=\"虚电路方式\"></a>虚电路方式</h5><p>提供连接服务，是数据报方式和电路交换方式的结合。</p>\n<p><em>连接服务</em>:首先为分组的传输确定传输路径（建立连接），然后沿该路径(连接）传输系列分组，系列分组传输路径相同，传输结束后拆除连接。</p>\n<p><em>虚电路</em>:一条源主机到目的主机类似于电路的路径（逻辑连接)，路径上所有结点都要维持这条虚电路的建立,都维持一张虚电路表，每一项记录了一个打开的虚电路的信息。</p>\n<p>目的地址仅在建立连接阶段使用,之后每个分组使用长度较短的虚电路号</p>\n<p><strong>比较</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">特点</th>\n<th align=\"center\">数据报服务</th>\n<th align=\"center\">虚电路服务</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">连接的建立</td>\n<td align=\"center\">不要</td>\n<td align=\"center\">必须要</td>\n</tr>\n<tr>\n<td align=\"center\">目的地址</td>\n<td align=\"center\">每个分组都有完整的目的地址</td>\n<td align=\"center\">仅在建立连接阶段使用，之后每个分组使用长度较短的虚电路号</td>\n</tr>\n<tr>\n<td align=\"center\">路由选择</td>\n<td align=\"center\">每个分组独立地进行路由选择和转发</td>\n<td align=\"center\">属于同一条虚电路的分组按照同一路由转发</td>\n</tr>\n<tr>\n<td align=\"center\">分组顺序</td>\n<td align=\"center\">不保证分组的有序到达</td>\n<td align=\"center\">保证分组的有序到达</td>\n</tr>\n<tr>\n<td align=\"center\">可靠性</td>\n<td align=\"center\">不保证可靠通信，可靠性由用户主机来保证</td>\n<td align=\"center\">可靠性由网络保证</td>\n</tr>\n<tr>\n<td align=\"center\">对网络故障的适应性</td>\n<td align=\"center\">出故障的结点丢失分组，其他分组路径选择发生变化，可正常传输</td>\n<td align=\"center\">所有经过故障结点的虚电路均不能正常工作</td>\n</tr>\n<tr>\n<td align=\"center\">差错处理和流量控制</td>\n<td align=\"center\">由用户主机进行流量控制，不保证数据报的可靠性</td>\n<td align=\"center\">可由分组交换网负责，也可由用户主机负责</td>\n</tr>\n</tbody></table>\n<h3 id=\"路由算法\"><a href=\"#路由算法\" class=\"headerlink\" title=\"路由算法\"></a>路由算法</h3><h4 id=\"静态路由算法\"><a href=\"#静态路由算法\" class=\"headerlink\" title=\"静态路由算法\"></a>静态路由算法</h4><p>管理员手工配置路由信息。<br><strong>优点</strong>：<br>简便、可靠,在负荷稳定、拓扑变化不大的网络中运行效果很好，广泛用于高度安全性的军事网络和较小的商业网络。<br><strong>缺点：</strong><br>路由更新慢，不适用于大型网络</p>\n<h4 id=\"动态路由算法\"><a href=\"#动态路由算法\" class=\"headerlink\" title=\"动态路由算法\"></a>动态路由算法</h4><p>路由器间彼此交换信息，按照路由算法优化出路由表项。<br><strong>优点：</strong><br>路由更新快，适用大型网络，及时响应链路费用或网络拓扑变化。<br><strong>缺点:</strong><br>算法复杂，增加网络负担。</p>\n<p><strong>全局性链路状态路由算法(OSPF)</strong><br>网络层协议,直接IP传输<br>所有路由器掌握完整的网络拓扑和链路费用信息，每隔30分钟刷新一次数据库中的链路状态，适用于大规模网络，收敛速度很快。</p>\n<p>迪杰斯塔拉算法。。。梦回离散数学。。。</p>\n<p><em>OSPF协议如何工作：</em></p>\n<ol>\n<li>使用洪泛法向自治系统内所有路由器发送信息，即路由器通过输出端口向所有相邻的路由器发送信息，而每一个相邻路由器又再次将此信息发往其所有的相邻路由器。最终整个区域内所有路由器都得到了这个信息的一个副本</li>\n<li>发送的信息就是与本路由器相邻的所有路由器的链路状态（本路由器和哪些路由器相邻，以及该链路的度量/代价――费用、距离、时延、带宽等）。</li>\n<li>只有当链路状态发生变化时，路由器才向所有路由器洪泛发送此信息。</li>\n</ol>\n<p><em>链路状态路由算法</em>：</p>\n<ol>\n<li>每个路由器发现它的邻居结点[HELLO问候分组]，并了解邻居节点的网络地址。</li>\n<li>设置到它的每个邻居的成本度量metric。</li>\n<li>构造[DD数据库描述分组]，向邻站给出自己的链路状态数据库中的所有链路状态项目的摘要信息。</li>\n<li>如果DD分组中的摘要自己都有，则邻站不做处理;如果有没有的或者是更新的，则发送[LSR链路状态请求分组]<br>请求自己没有的和比自己更新的信息。</li>\n<li>收到邻站的LSR分组后，发送[LSU链路状态更新分组]进行更新。</li>\n<li>更新完毕后，邻站返回一个[LSAck链路状态确认分组]进行确认。</li>\n</ol>\n<p>只要一个路由器的链路状态发生变化:</p>\n<ol>\n<li>泛洪发送[LSU链路状态更新分组]进行更新。</li>\n<li>更新完毕后，其他站返回一个[LSAck链路状态确认分组]进行确认。</li>\n</ol>\n<p>最后使用Dijkstra根据自己的链路状态数据库构造到其他节点间的最短路径。</p>\n<p><strong>分散性距离向量路由算法(RIP)</strong><br>应用层协议，采用UDP传输。<br>RIP是一种分布式的基于<em>距离向量</em>的路由选择协议，是因特网的协议标准，最大优点是简单，但是如果出现网络故障，该网络故障信息就会传播的比较慢。<br>网络中每一个路由器都维护<em>从它自己到其他每一个目的网络的唯一最佳距离</em>(从源端口到目的端口所经过的路由器个数)记录。<br>RIP允许一条路由最多只能包含15个路由器，因此距离为16表示网络不可达，所以只适用于小互联网。  </p>\n<p><em>RIP协议如何工作：</em></p>\n<ol>\n<li>仅和相邻路由交换RIP报文，一个RIP报文最多可包括25个路由，如超过，必须再用一个RIP报文传送。</li>\n<li>每30秒交换一次路由信息，然后路由器根据新信息更新路由表。若超过180s没收到相邻路由器的通告，则判定该相邻路由器失效，并更新自己路由表。</li>\n<li>经过若干次更新后，所有路由器最终都会知道到达本自治系统任何一个网络的最短距离和下一跳路由器的地址，即“收敛”。</li>\n</ol>\n<p><em>距离向量算法</em></p>\n<ol>\n<li>修改相邻路由器发来的RIP报文中所有表项<br>对地址为x的相邻路由器发来的RIP报文，修改此报文中的所有项目:把“下一跳”字段中的地址改为X，并把所有的“距离”字段+1。</li>\n<li>对修改后的RIP报文中的每一个项目，进行以下步骤:<ul>\n<li>R1路由表中若没有Net3，则把该项目填入R1路由表</li>\n<li>R1路由表中若有Net3，则查看下一跳路由器地址:<br>若下一跳是x，则用收到的项目替换源路由表中的项目;<br>若下一跳不是x，原来距离比从x走的距离远则更新，否则不作处理。</li>\n</ul>\n</li>\n<li>若180s还没收到相邻路由器x的更新路由表，则把x记为不可达的路由器，即把距离设置为16</li>\n</ol>\n<h3 id=\"路由选择协议\"><a href=\"#路由选择协议\" class=\"headerlink\" title=\"路由选择协议\"></a>路由选择协议</h3><p>因特网规模很大，而且许多单位不想让外界知道自己的路由选择协议，但还想连入因特网，因此诞生了路由分层次的路由选择协议</p>\n<p><strong>自治系统AS</strong>:在单一的技术管理下的一组路由器，而这些路由器使用一种AS内部的路由选择协议和共同的度量以确定分组在该AS内的路由，同时还使用一种AS之间的路由协议以确定在AS之间的路由。一个AS内的所有网络都属于一个行政单位来管辖，一个自治系统的所有路由器在本自治系统内都必须连通。</p>\n<h4 id=\"内部网关协议IGP\"><a href=\"#内部网关协议IGP\" class=\"headerlink\" title=\"内部网关协议IGP\"></a>内部网关协议IGP</h4><p>常用算法为RIP和OSPF</p>\n<h4 id=\"外部网关协议BGP\"><a href=\"#外部网关协议BGP\" class=\"headerlink\" title=\"外部网关协议BGP\"></a>外部网关协议BGP</h4><p>常用算法为BGP</p>\n<p><strong>BGP协议：</strong><br>属于应用层协议，TCP传输<br>BGP支持CIDR，因此 BGP的路由表也就应当包括目的网络前缀、下一跳路由器，以及到达该目的网络所要经过的各个自治系统序列。<br>与其他AS的邻站BGP发言人交换网络可达性的信息，即要到达某个网络所要经过的一系列AS。发生变化时更新有变化的部分。<br>当BGP发言人互相交换了网络可达性的信息后，各BGP发言人就根据所采用的策略从收到的路由信息中找出到达各AS的较好路由。</p>\n<p><em>BGP-4的四种报文</em></p>\n<ol>\n<li>OPEN(打开）报文:用来与相邻的另一个BGP发言人建立关系，并认证发送方。</li>\n<li>UPDATE（更新）报文:通告新路径或撤销原路径</li>\n<li>KEEPALIVE（保活）报文:在无UPDATE时，周期性证实邻站的连通性;也作为OPEN的确认。</li>\n<li>NOTIFICATION(通知）报文:报告先前报文的差错;也被用于关闭连接。</li>\n</ol>\n<h3 id=\"网络地址转换\"><a href=\"#网络地址转换\" class=\"headerlink\" title=\"网络地址转换\"></a>网络地址转换</h3><p>网络地址转换NAT(Network Address Translation):在专用网连接到因特网的路由器上安装NAT软件，安装了NAT软件的路由器叫NAT路由器，它至少有一个有效的外部全球IP地址。<br><a href=\"https://baike.baidu.com/item/nat/320024?fr=aladdin\">NAT百度百科</a></p>\n<h3 id=\"子网划分和子网掩码\"><a href=\"#子网划分和子网掩码\" class=\"headerlink\" title=\"子网划分和子网掩码\"></a>子网划分和子网掩码</h3><p>某单位<a href=\"https://baike.baidu.com/item/%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86/5446046\">划分子网</a>后，对外仍表现为一个网络，即本单位外的网络看不见本单位内子网的划分。子网划分就是将IP地址划分为网络前缀和主机号。  </p>\n<p>目标地址和子网掩码逐位相与，则得到目标所在的子网的地址。  </p>\n<p>子网掩码由连续的1和0组成，将网络前缀全部改成1，主机号全部改成0，即可得到当前子网的子网掩码</p>\n<p><strong>无分类域间路由选择CIDR:</strong><br>消除了传统的A类，B类和c类地址以及划分子网的概念。<br><em>记法</em>:IP地址后加上“/”，然后写上网络前缀（可以任意长度)的位数。e.g.128.14.32.0/20。</p>\n<p>使用CIDR时，查找路由表可能得到几个匹配结果，应选择具有最长网络前缀的路由。前缀越长，地址块越小，路由越具体。</p>\n<p><strong>构成超网</strong><br>和划分子网相逆的过程。将多个子网聚合成一个较大的子网，叫做构成超网，或路由聚合。<br><em>方法</em>：将网络前缀缩短。</p>\n<p>这也是为什么使用CIDR时，在路由表的几个匹配结果中，要选择具有最长网络前缀的路由。</p>\n<h3 id=\"ARP协议\"><a href=\"#ARP协议\" class=\"headerlink\" title=\"ARP协议\"></a>ARP协议</h3><p>由于在实际网络的链路上传送数据帧时，最终必须使用MAC地址。<br><em>ARP协议</em>:完成主机或路由器IP地址到MAC地址的映射。解决下一跳走哪的问题。  </p>\n<p><strong>ARP协议使用过程:</strong><br>检查ARP高速缓存，有对应表项则写入MAC帧，没有则用目的MAC地址为FF-FF-FF-FF-FF-FF的帧封装并广播ARP请求分组，同一局域网中所有主机都能收到该请求。目的主机收到请求后就会向源主机单播一个ARP响应分组，源主机收到后将此映射写入ARP缓存（10-20min更新一次）。<br><strong>ARP协议4种典型情况:</strong>  </p>\n<ol>\n<li>主机A发给本网络上的主机B:用ARP找到主机B的硬件地址;</li>\n<li>主机A发给另一网络上的主机B:用ARP找到本网络上一个路由器（网关）的硬件地址;</li>\n<li>路由器发给本网络的主机A:用ARP找到主机A的硬件地址;</li>\n<li>路由器发给另一网络的主机B:用ARP找到本网络上的一个路由器的硬件地址。</li>\n</ol>\n<h3 id=\"DHCP协议\"><a href=\"#DHCP协议\" class=\"headerlink\" title=\"DHCP协议\"></a>DHCP协议</h3><p>用于动态分配IP地址，是一种基于UDP的应用层协议。</p>\n<p>DHCP提供<em>即插即用</em>联网的机制，主机可以从服务器动态获取IP地址、子网掩码、默认网关、DNS服务器名称与IP地址,允许<em>地址重用</em>，支持<em>移动用户加入网络</em>，支持在用地址续租*。</p>\n<p><strong>运行方法</strong>：</p>\n<ol>\n<li>主机广播<em>DHCP发现</em>报文，查找网络中的DHCP服务器，服务器获得一个IP地址。</li>\n<li>DHCP服务器广播<em>DHCP提供</em>报文，服务器拟分配给主机一个IP地址及相关配置。主机收到该报文之后，停止接受其他的DHCP提供报文。</li>\n<li>主机广播<em>DHCP请求</em>报文，告知其他的DHCP服务器，主机已经获得该IP地址。</li>\n<li>DHCP服务器广播<em>DHCP确认</em>报文，正式将地址分配给主机。</li>\n</ol>\n<h3 id=\"ICMP协议\"><a href=\"#ICMP协议\" class=\"headerlink\" title=\"ICMP协议\"></a>ICMP协议</h3><p><strong>ICMP五种差错报文：</strong></p>\n<ol>\n<li>终点不可达:当路由器或主机不能交付数据报时就向源点发送终点不可达报文。</li>\n<li><del>源点抑制(不再使用)</del>:当路由器或主机由于拥塞而丢弃数据报时，就向源点发送源点抑制报文，使源点知道应当把数据报的发送速率放慢。</li>\n<li>时间超过:当路由器收到生存时间TTL=O的数据报时，除丢弃该数据报外，还要向源点发送时间超过报文。当终点在预先规定的时间内不能收到一个数据报的全部数据报片时，就把已收到的数据报片都丢弃，并向源点发送时间超过报文。</li>\n<li>参数问题:当路由器或目的主机收到的数据报的首部中有的字段的值不正确时，就丢弃该数据报，并向源点发送参数问题报文。</li>\n<li>改变路由(重定向)﹔路由器把改变路由报文发送给主机，让主机知道下次应将数据报发送给另外的路由器(可通过更好的路由）。</li>\n</ol>\n<p>不发送ICMP差错报文的情况</p>\n<ol>\n<li>对ICMP差错报告报文不再发送ICMP差错报告报文。</li>\n<li>对第一个分片的数据报片的所有后续数据报片都不发送ICMP差错报告报文。</li>\n<li>对具有组播地址的数据报都不发送ICMP差错报告报文。</li>\n<li>对具有特殊地址（如127.0.0.0或0.0.0.0）的数据报不发送ICMP差错报告报文。</li>\n</ol>\n<p><strong>ICMP询问报文</strong>：</p>\n<ol>\n<li>回送请求和回答报文：主机或路由器向特定目的主机发出的询问，收到此报文的主机必须给源主机或路由器发送ICMP回送回答报文。测试目的站是否可达以及了解其相关状态。</li>\n<li>时间戳请求和回答报文︰请某个主机或路由器回答当前的日期和时间。用来进行时钟同步和测量时间。</li>\n<li><del>掩码地址请求和回答报文</del>(不再使用)</li>\n<li><del>路由器询问和通告报文</del>(不再使用)</li>\n</ol>\n<p><strong>ICMP的应用</strong><br><em>PING</em>：测试两个主机之间的连通性，使用了ICMP回送请求和回答报文。<br><em>Traceroute</em>：跟踪一个分组从源点到终点的路径，使用了ICMP时间超过差错报告报文。</p>\n<h3 id=\"移动IP\"><a href=\"#移动IP\" class=\"headerlink\" title=\"移动IP\"></a>移动IP</h3><p><strong>A刚进入外部网络:</strong></p>\n<ol>\n<li>在外部代理登记获得一个转交地址，离开时注销。</li>\n<li>外地代理向本地代理登记转交地址。</li>\n</ol>\n<p><strong>B给A发送数据报:</strong></p>\n<ol>\n<li>本地代理截获数据报。</li>\n<li>本地代理再封装数据报，新的数据报目的地址是转交地址，发给外部代理（隧道)。</li>\n<li>外部代理拆封数据报并发给A。</li>\n</ol>\n<p><strong>A给B发送数据报:</strong><br>A用自己的主地址作为数据报源地址，用B的IP地址作为数据报的目的地址。</p>\n<p><strong>A移动到了下一个网络:</strong></p>\n<ol>\n<li>在新外部代理登记注册一个转交地址。</li>\n<li>新外部代理给本地代理发送新的转交地址（覆盖旧的）。3.通信</li>\n</ol>\n<p><strong>A回到了归属网络:</strong></p>\n<ol>\n<li>A向本地代理注销转交地址。</li>\n<li>按原始方式通信。</li>\n</ol>\n<h3 id=\"网络层设备\"><a href=\"#网络层设备\" class=\"headerlink\" title=\"网络层设备\"></a>网络层设备</h3><p><strong>路由器</strong>：<br>路由器是一种具有多个输入端口和多个输出端口的专用计算机，其任务是转发分组。<br><em>功能：</em></p>\n<ul>\n<li>路由选择：根据所选定的路由选择协议构造出路由表，同时经常或定期地和相邻路由器交换路由信息而不断地更新和维护路由表。 </li>\n<li>分租转发<ul>\n<li><p>交换结构:根据转发表（路由表得来〉对分组进行转发。</p>\n</li>\n<li><p>分组若收到RIP/OSPF分组等，则转发把分组送往路由选择处理机;若收到数据分组，则查找转发表并输出。</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>若路由器处理分组的速率赶不上分组进入队列的速率，则队列的存储空间最终必定减少到零，这就使后面再进入队列的分组由于没有存储空间而只能被丢弃。</p>\n","feature":true,"text":"网络层把分组从源端传到目的端，为分组交换网上的不同主机提供通信服务。网络层传输单位是数据报。 功能功能一:路由选择与分组转发最佳路径功能二:异构网络互联功能三:...","permalink":"/post/计算机网络-三","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[{"name":"网络","slug":"网络","count":4,"path":"api/categories/网络.json"}],"tags":[{"name":"网络","slug":"网络","count":4,"path":"api/tags/网络.json"},{"name":"网络层","slug":"网络层","count":1,"path":"api/tags/网络层.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BD%91%E7%BB%9C%E5%B1%82\"><span class=\"toc-text\">网络层</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">功能</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E4%BA%A4%E6%8D%A2%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">数据交换方式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%94%B5%E8%B7%AF%E4%BA%A4%E6%8D%A2\"><span class=\"toc-text\">电路交换</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8A%A5%E6%96%87%E4%BA%A4%E6%8D%A2\"><span class=\"toc-text\">报文交换</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%86%E7%BB%84%E4%BA%A4%E6%8D%A2\"><span class=\"toc-text\">分组交换</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E6%8A%A5%E6%96%B9%E5%BC%8F%EF%BC%88Internet%E6%AD%A3%E5%9C%A8%E4%BD%BF%E7%94%A8%E7%9A%84%EF%BC%89\"><span class=\"toc-text\">数据报方式（Internet正在使用的）</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%99%9A%E7%94%B5%E8%B7%AF%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">虚电路方式</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B7%AF%E7%94%B1%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">路由算法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">静态路由算法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">动态路由算法</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B7%AF%E7%94%B1%E9%80%89%E6%8B%A9%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">路由选择协议</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%86%85%E9%83%A8%E7%BD%91%E5%85%B3%E5%8D%8F%E8%AE%AEIGP\"><span class=\"toc-text\">内部网关协议IGP</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%96%E9%83%A8%E7%BD%91%E5%85%B3%E5%8D%8F%E8%AE%AEBGP\"><span class=\"toc-text\">外部网关协议BGP</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">网络地址转换</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86%E5%92%8C%E5%AD%90%E7%BD%91%E6%8E%A9%E7%A0%81\"><span class=\"toc-text\">子网划分和子网掩码</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ARP%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">ARP协议</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DHCP%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">DHCP协议</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ICMP%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">ICMP协议</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A7%BB%E5%8A%A8IP\"><span class=\"toc-text\">移动IP</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BD%91%E7%BB%9C%E5%B1%82%E8%AE%BE%E5%A4%87\"><span class=\"toc-text\">网络层设备</span></a></li></ol></li></ol>","author":{"name":"Ac-Accelerator","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"一位计算机技术爱好者，大学在读，目前正在学习C++、Python、Java和计算机系统以及计算机视觉深度学习等相关知识，欢迎交流","socials":{"github":"https://github.com/Ac-Accelerator","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_31702515?spm=1000.2115.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/74120250?spm_id_from=333.1007.0.0"},"rss":{"icon":"/svg/rss.svg","link":"atom.xml"},"qq":{"icon":"/svg/QQ.svg","link":"http://tool.gljlw.com/qq/?qq=2583832841"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"神经网络的反向传播","uid":"3a327b02e6446ad9da6af37fe8dd2226","slug":"神经网络的反向传播","date":"2022-05-18T02:11:00.000Z","updated":"2023-09-25T17:00:59.383Z","comments":true,"path":"api/articles/神经网络的反向传播.json","keywords":"C++,Pyhton,Java,算法","cover":"/img/ai1.jpeg","text":"反向传播基本思想向前传播函数： SVM损失函数，计算每一个样本的损失： 附带正则项的所有样本SVM损失的平均值函数，带上正则项可以使得模型更加简单，更容易泛化。...","permalink":"/post/神经网络的反向传播","photos":[],"count_time":{"symbolsCount":814,"symbolsTime":"1 mins."},"categories":[{"name":"人工智能","slug":"人工智能","count":4,"path":"api/categories/人工智能.json"}],"tags":[{"name":"反向传播","slug":"反向传播","count":1,"path":"api/tags/反向传播.json"}],"author":{"name":"Ac-Accelerator","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"一位计算机技术爱好者，大学在读，目前正在学习C++、Python、Java和计算机系统以及计算机视觉深度学习等相关知识，欢迎交流","socials":{"github":"https://github.com/Ac-Accelerator","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_31702515?spm=1000.2115.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/74120250?spm_id_from=333.1007.0.0"},"rss":{"icon":"/svg/rss.svg","link":"atom.xml"},"qq":{"icon":"/svg/QQ.svg","link":"http://tool.gljlw.com/qq/?qq=2583832841"}}}},"feature":true},"next_post":{"title":"Java学习笔记(三)","uid":"0c89500007ef3b784b27319aeed34361","slug":"Java学习笔记-三","date":"2022-05-12T12:04:00.000Z","updated":"2023-09-25T16:37:41.401Z","comments":true,"path":"api/articles/Java学习笔记-三.json","keywords":"C++,Pyhton,Java,算法","cover":"/img/java3.jpeg","text":"Maven构建工具构建工具功能: 自动帮程序员甄别和下载第三方库(jar) 完成整个项目编译(调用javac.exe) 完成整个项目单元测试流程(调用Junit...","permalink":"/post/Java学习笔记-三","photos":[],"count_time":{"symbolsCount":"8k","symbolsTime":"7 mins."},"categories":[{"name":"Java","slug":"Java","count":3,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":3,"path":"api/tags/Java.json"},{"name":"Maven","slug":"Maven","count":1,"path":"api/tags/Maven.json"},{"name":"语法糖","slug":"语法糖","count":1,"path":"api/tags/语法糖.json"},{"name":"泛型","slug":"泛型","count":1,"path":"api/tags/泛型.json"}],"author":{"name":"Ac-Accelerator","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"一位计算机技术爱好者，大学在读，目前正在学习C++、Python、Java和计算机系统以及计算机视觉深度学习等相关知识，欢迎交流","socials":{"github":"https://github.com/Ac-Accelerator","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_31702515?spm=1000.2115.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/74120250?spm_id_from=333.1007.0.0"},"rss":{"icon":"/svg/rss.svg","link":"atom.xml"},"qq":{"icon":"/svg/QQ.svg","link":"http://tool.gljlw.com/qq/?qq=2583832841"}}}},"feature":true}}