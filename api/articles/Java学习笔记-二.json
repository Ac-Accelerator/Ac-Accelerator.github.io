{"title":"Java学习笔记(二)","uid":"f72442027e50aabe63bc800cc8297c91","slug":"Java学习笔记-二","date":"2022-05-11T15:24:00.000Z","updated":"2023-07-13T18:22:14.593Z","comments":true,"path":"api/articles/Java学习笔记-二.json","keywords":"C++,Pyhton,Java,算法","cover":"/img/java2.jpeg","content":"<h3 id=\"Java常用类\"><a href=\"#Java常用类\" class=\"headerlink\" title=\"Java常用类\"></a>Java常用类</h3><p><strong>Java类库</strong><br>*包名以Java开始的包是Java核心包(Java Core Package)*：  </p>\n<table>\n<thead>\n<tr>\n<th>Module</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>java.applet.*</td>\n<td>提供了创建applet需要的所有类。</td>\n</tr>\n<tr>\n<td>java.awt.*</td>\n<td>提供了创建用户界面以及绘制和管理图形、图像的类</td>\n</tr>\n<tr>\n<td>java.beans.*</td>\n<td>提供了开发Java Beans需要的所有类。</td>\n</tr>\n<tr>\n<td>java.io.*</td>\n<td>提供了通过数据流、对象序列以及文件系统实现的系统输入、输出。</td>\n</tr>\n<tr>\n<td>java.lang.*</td>\n<td>Java编程语言的基本类库。</td>\n</tr>\n<tr>\n<td>java.math.*</td>\n<td>提供了简明的整数算术以及十进制算术的基本函数。</td>\n</tr>\n<tr>\n<td>java.net.*</td>\n<td>提供了用于实现网络通讯应用的所有类。</td>\n</tr>\n<tr>\n<td>java.nio.*,</td>\n<td>提供用于实现nio应用的所有类。</td>\n</tr>\n<tr>\n<td>java.rmi.*</td>\n<td>提供了与远程方法调用相关的所有类。</td>\n</tr>\n<tr>\n<td>java.security.*</td>\n<td>提供了设计网络安全方案需要的一些类。</td>\n</tr>\n<tr>\n<td>java.sql.*</td>\n<td>捉供了访问和处理来自于Java标准数据源数据的类。</td>\n</tr>\n<tr>\n<td>java.text.*</td>\n<td>包括以一种独立于自然语言的方式处理文本、日期、数字和消息的类和接口。</td>\n</tr>\n<tr>\n<td>java.time.*</td>\n<td>捉供Java日期、时间类(Java 8新增的包)。</td>\n</tr>\n<tr>\n<td>java.util.*</td>\n<td>包括集合类、时间处理模式、日期时间工具等各类常用工具包。</td>\n</tr>\n</tbody></table>\n<p><em>包名以Javax开始的包是Java扩展包(Java Extension Package)</em></p>\n<h4 id=\"数字相关类\"><a href=\"#数字相关类\" class=\"headerlink\" title=\"数字相关类\"></a>数字相关类</h4><p>除了基本类及其包装类，还有大数类。</p>\n<ul>\n<li><p><a href=\"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/math/BigInteger.html\">java.math.Biglnteger</a> 支持无限大的整数运算</p>\n</li>\n<li><p><a href=\"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/math/BigDecimal.html\">java.math.BigDecimal</a> 支持无限大的小数运算(注意精度)。</p>\n</li>\n<li><p><a href=\"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/random/package-summary.html\">java.util.Random</a></p>\n<ul>\n<li>nextInt()返回一个随机int</li>\n<li>nextInt(int a)返回一个[0,a)之间的随机int</li>\n<li>ints方法批量返回随机数数组</li>\n<li>nextDouble()返回一个[0.0,1.0]之间double</li>\n<li>java.lang.Math.random()返回一个[0.0,1.0]之间double</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Math.html\">java.lang.Math</a><ul>\n<li>绝对值函数abs</li>\n<li>对数函数log</li>\n<li>比较函数max、 min</li>\n<li>幂函数pow</li>\n<li>四舍五入函数round等</li>\n<li>向下取整floor</li>\n<li>向上取整ceil</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"字符串相关类：\"><a href=\"#字符串相关类：\" class=\"headerlink\" title=\"字符串相关类：\"></a>字符串相关类：</h4><ul>\n<li><a href=\"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/String.html\">java.lang.String</a></li>\n<li><a href=\"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/StringBuffer.html\">java.lang.StringBuffer</a></li>\n<li><a href=\"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/StringBuilder.html\">java.lang.StringBuilder</a></li>\n</ul>\n<h4 id=\"时间相关类：\"><a href=\"#时间相关类：\" class=\"headerlink\" title=\"时间相关类：\"></a>时间相关类：</h4><p><a href=\"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/Calendar.html\">java.util.Calendar</a></p>\n<ul>\n<li>get(Field)来获取时间中每个属性的值.注意，月份0-11.</li>\n<li>getTime()，返回相应的Date对象</li>\n<li>getTimeInMillis(),返回自1970.1.1以来的毫秒数</li>\n<li>set(Field)设置时间字段</li>\n<li>add(field, amount)根据指定字段增加/减少时间</li>\n<li>roll(field, amount)根据指定字段增加/减少时间，但不影响上一级的时间段</li>\n</ul>\n<p>JAVA8提供的新的包：<br>\n<ul>\n<li>LocalDate: 日期类</li>\n<li>LocalTime: 时间类(时分秒-纳秒)</li>\n<li>LocalDateTime: LocalDate +LocalTime</li>\n<li>Instant:时间戳</li>\n</ul>\n<h4 id=\"格式化相关类：\"><a href=\"#格式化相关类：\" class=\"headerlink\" title=\"格式化相关类：\"></a>格式化相关类：</h4><p>\n<ul>\n<li>NumberFormat:数字格式化，抽象类<ul>\n<li>DecimalFormat</li>\n</ul>\n</li>\n<li>MessageFormat:字符串格式化</li>\n<li>DateFormat:日期/时间格式化，抽象类 <ul>\n<li>SimpleDateFormat</li>\n</ul>\n</li>\n</ul>\n<p>\n<ul>\n<li>DateTimcFormatter</li>\n</ul>\n<h3 id=\"异常及其处理\"><a href=\"#异常及其处理\" class=\"headerlink\" title=\"异常及其处理\"></a>异常及其处理</h3><h4 id=\"异常分类\"><a href=\"#异常分类\" class=\"headerlink\" title=\"异常分类\"></a>异常分类</h4><ul>\n<li>Throwable:所有错误的祖先</li>\n<li>Error:系统内部错误或者资源耗尽。</li>\n<li>Exception:程序有关的异常。<ul>\n<li>RuntimcExccption:程序自身的错误</li>\n<li>非RuntimcException:外界相关的错误</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"异常处理\"><a href=\"#异常处理\" class=\"headerlink\" title=\"异常处理\"></a>异常处理</h4><p><em>try</em>:正常业务逻辑代码。<br><em>catch</em>:当try发生异常，将执行catch代码。若无异常，绕之。catch块可以有多个，每个有不同的入口形参。当已发生的异常和某一个catch块中的形参类型一致，那么将执行该catch块中的代码。一个异常只能进入一个catch块(通常小异常放在前面，大异常放在后面)。<br><em>finally</em>:当try或catch执行结束后，必须要执行finally。<br><strong>上述结构是可以嵌套的</strong><br>对于<em>throw</em>的写法<em>类似</em>于C++ 的异常规范，但两者有很大的不同：</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">divide</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\"> x, </span><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\"> y) throws </span><span style=\"color: #4EC9B0\">ArithmeticException</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">result</span><span style=\"color: #D4D4D4\"> = x/y ;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #C586C0\">return</span><span style=\"color: #D4D4D4\"> x/y;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">}</span></span></code></pre></div><p>一个方法被覆盖，覆盖它的方法必须抛出相同的异常，或者异常的子类。<br>如果父类的方法抛出多个异常，那么重写的子类方法必须抛出那些异常的子集，也就是不能抛出新的异常。</p>\n<h4 id=\"自定义异常\"><a href=\"#自定义异常\" class=\"headerlink\" title=\"自定义异常\"></a>自定义异常</h4><p>自定义异常，需要继承Exception类或其子类。</p>\n<ul>\n<li>继承自Exception，就变成Checked Exception</li>\n<li>继承自RuntimeException,就变成Unchecked Exception</li>\n</ul>\n<p>自定义重点在构造函数</p>\n<ul>\n<li>调用父类Exception的message构造函数</li>\n<li>可以自定义自己的成员变量<br>在程序中采用throw主动抛出异常</li>\n</ul>\n<h3 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h3><p><strong>数组</strong>：  </p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">a</span><span style=\"color: #D4D4D4\">[]; </span><span style=\"color: #6A9955\">//a 还没有new操作实际上是nu1l，也不知道内存位置</span></span>\n<span class=\"line\"><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\">[] </span><span style=\"color: #9CDCFE\">b</span><span style=\"color: #D4D4D4\">; </span><span style=\"color: #6A9955\">//b 还没有new操作实际上是null，也不知道内存位置</span></span>\n<span class=\"line\"><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\">[] </span><span style=\"color: #9CDCFE\">c</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\">[</span><span style=\"color: #B5CEA8\">2</span><span style=\"color: #D4D4D4\">]; </span><span style=\"color: #6A9955\">//c有2个元素，都是0</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">c[</span><span style=\"color: #B5CEA8\">0</span><span style=\"color: #D4D4D4\">]= </span><span style=\"color: #B5CEA8\">10</span><span style=\"color: #D4D4D4\">; c[</span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #D4D4D4\">] = </span><span style=\"color: #B5CEA8\">20</span><span style=\"color: #D4D4D4\">;</span><span style=\"color: #6A9955\">//逐个初始化</span></span>\n<span class=\"line\"><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">d</span><span style=\"color: #D4D4D4\">[] = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\">[]{</span><span style=\"color: #B5CEA8\">0</span><span style=\"color: #D4D4D4\">,</span><span style=\"color: #B5CEA8\">2</span><span style=\"color: #D4D4D4\">,</span><span style=\"color: #B5CEA8\">4</span><span style=\"color: #D4D4D4\">};</span><span style=\"color: #6A9955\">//d有3个元素,0,2,4，同时定义和初始化</span></span>\n<span class=\"line\"><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">d1</span><span style=\"color: #D4D4D4\">[] = {</span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #D4D4D4\">,</span><span style=\"color: #B5CEA8\">3</span><span style=\"color: #D4D4D4\">,</span><span style=\"color: #B5CEA8\">5</span><span style=\"color: #D4D4D4\">};</span><span style=\"color: #6A9955\">//d1有3个元素,1,3,5同时定义和初始化</span></span>\n<span class=\"line\"><span style=\"color: #6A9955\">//规则数组</span></span>\n<span class=\"line\"><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">a</span><span style=\"color: #D4D4D4\">[][] = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\">[</span><span style=\"color: #B5CEA8\">2</span><span style=\"color: #D4D4D4\">][</span><span style=\"color: #B5CEA8\">3</span><span style=\"color: #D4D4D4\">];</span></span>\n<span class=\"line\"><span style=\"color: #6A9955\">//不规则数组</span></span>\n<span class=\"line\"><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">b</span><span style=\"color: #D4D4D4\">[][];</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">b =</span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\">[</span><span style=\"color: #B5CEA8\">3</span><span style=\"color: #D4D4D4\">][];</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">b[</span><span style=\"color: #B5CEA8\">0</span><span style=\"color: #D4D4D4\">]=</span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\">[</span><span style=\"color: #B5CEA8\">3</span><span style=\"color: #D4D4D4\">];</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">b[</span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #D4D4D4\">]=</span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\">[</span><span style=\"color: #B5CEA8\">4</span><span style=\"color: #D4D4D4\">];</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">b[</span><span style=\"color: #B5CEA8\">2</span><span style=\"color: #D4D4D4\">]=</span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\">[</span><span style=\"color: #B5CEA8\">5</span><span style=\"color: #D4D4D4\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6A9955\">//注意声明变量时候没有分配内存，不需要指定大小，以下是错误示例</span></span>\n<span class=\"line\"><span style=\"color: #6A9955\">//int e[5];</span></span>\n<span class=\"line\"><span style=\"color: #6A9955\">//int[5] f;</span></span>\n<span class=\"line\"><span style=\"color: #6A9955\">//int[5] g = new int[5];</span></span>\n<span class=\"line\"><span style=\"color: #6A9955\">//int h[5] = new int[5];</span></span></code></pre></div><p>索引和遍历与C++相同。</p>\n<p><strong>JCF</strong>:<br>相当于C++的<em>STL</em>。<br><em>JCF主要的数据结构实现类</em></p>\n<ul>\n<li>列表: <ul>\n<li>(接口) </li>\n<li>) ,</li>\n<li>) </li>\n<li>\n</li></ul>\n</li>\n<li>集合:<ul>\n<li>\n<li>\n<li>\n<li>\n</li></li></li></li></ul>\n</li>\n<li>映射：<ul>\n<li>\n<li>\n<li>\n<li>\n<li>\n</li></li></li></li></li></ul>\n</li>\n</ul>\n<p><em>JCF主要的算法类</em></p>\n<ul>\n<li>\n<li><a href=\"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/Collections.html\">Collections</a>:对Collection及其子类进行排序和查找操作</li>\n<li><a href=\"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Comparable.html\">Comparable&lt;T&gt;</a>(接口)：通过实现其中<code>int compareTo(T obj)</code>方法来实现自定义的排序；</li>\n<li><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>&gt;返回1，==返回0，&lt;返回-1</p></blockquote>\n</li>\n<li><a href=\"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/Comparator.html\">Comparator&lt;T&gt;</a>(接口)：新建一个类来实现Comparator中的<code>int compare(T obj1, T obj2)</code>然后将该类的一个对象作为参数传入工具类的sort方法，这个对象叫做<em>比较器</em>。</li>\n<li><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>&gt;返回1，==返回0，&lt;返回-1</p></blockquote>\n</li>\n</li></ul>\n<h3 id=\"文件操作\"><a href=\"#文件操作\" class=\"headerlink\" title=\"文件操作\"></a>文件操作</h3><p><a href=\"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/io/File.html\">java.io.File</a></p>\n<ul>\n<li>isDirectory是否是目录</li>\n<li>isFile是否是文件</li>\n<li>getName获取文件名字</li>\n<li>getParent获取上一层目录路径</li>\n<li>getPath 获取这个文件的全路径</li>\n<li>length获取文件的大小</li>\n<li>lastModified返回文件最后一次修改时间</li>\n</ul>\n<p><a href=\"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/io/package-summary.html\">java.io</a>(包括大部分文件操作)<br><a href=\"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/nio/package-summary.html\">java.nio</a>(Java7提供新IO包，是对原有的IO包的补充扩展)</p>\n<h4 id=\"文本文件读写：\"><a href=\"#文本文件读写：\" class=\"headerlink\" title=\"文本文件读写：\"></a>文本文件读写：</h4><p><strong>读：</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.io.BufferedReader;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.io.FileInputStream;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.io.InputStreamReader;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">class</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">TxtFileRead</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">static</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">void</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">main</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #4EC9B0\">String</span><span style=\"color: #D4D4D4\">[] </span><span style=\"color: #9CDCFE\">args</span><span style=\"color: #D4D4D4\">) {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #DCDCAA\">readFile1</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #9CDCFE\">System</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #9CDCFE\">out</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">println</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"===================\"</span><span style=\"color: #D4D4D4\">);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">  </span><span style=\"color: #6A9955\">//法1</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">static</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">void</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">readFile1</span><span style=\"color: #D4D4D4\">() {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">FileInputStream</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">fis</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #569CD6\">null</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">InputStreamReader</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">isr</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #569CD6\">null</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">BufferedReader</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">br</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #569CD6\">null</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #C586C0\">try</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            fis = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">FileInputStream</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"c:/temp/abc.txt\"</span><span style=\"color: #D4D4D4\">); </span><span style=\"color: #6A9955\">// 节点类</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            isr = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">InputStreamReader</span><span style=\"color: #D4D4D4\">(fis, </span><span style=\"color: #CE9178\">\"UTF-8\"</span><span style=\"color: #D4D4D4\">); </span><span style=\"color: #6A9955\">// 转化类</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            br = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">BufferedReader</span><span style=\"color: #D4D4D4\">(isr); </span><span style=\"color: #6A9955\">// 装饰类</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #6A9955\">// 上面3行可以直接缩写为下面一行</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #6A9955\">// br = new BufferedReader(newInputStreamReader(newFileInputStream(\"c:/temp/abc.txt\"),\"UTF-8\"))</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #4EC9B0\">String</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">line</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #C586C0\">while</span><span style=\"color: #D4D4D4\"> ((line = </span><span style=\"color: #9CDCFE\">br</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">readLine</span><span style=\"color: #D4D4D4\">()) != </span><span style=\"color: #569CD6\">null</span><span style=\"color: #D4D4D4\">) </span><span style=\"color: #6A9955\">// 每次读取一行</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #9CDCFE\">System</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #9CDCFE\">out</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">println</span><span style=\"color: #D4D4D4\">(line);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        } </span><span style=\"color: #C586C0\">catch</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #4EC9B0\">Exception</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">ex</span><span style=\"color: #D4D4D4\">) {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">ex</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">printStackTrace</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        } </span><span style=\"color: #C586C0\">finally</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #C586C0\">try</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #9CDCFE\">br</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">close</span><span style=\"color: #D4D4D4\">(); </span><span style=\"color: #6A9955\">// 关闭最后一个类，会将所有的底层流都关闭</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            } </span><span style=\"color: #C586C0\">catch</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #4EC9B0\">Exception</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">ex</span><span style=\"color: #D4D4D4\">) {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #9CDCFE\">ex</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">printStackTrace</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">  </span><span style=\"color: #6A9955\">//法2</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">static</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">void</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">readFile2</span><span style=\"color: #D4D4D4\">() {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">String</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">line</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #6A9955\">// try-resource 语句，自动关闭资源</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #C586C0\">try</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #4EC9B0\">BufferedReader</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">in</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">BufferedReader</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">InputStreamReader</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">FileInputStream</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"c:/temp/abc.txt\"</span><span style=\"color: #D4D4D4\">)))) {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #C586C0\">while</span><span style=\"color: #D4D4D4\"> ((line = </span><span style=\"color: #9CDCFE\">in</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">readLine</span><span style=\"color: #D4D4D4\">()) != </span><span style=\"color: #569CD6\">null</span><span style=\"color: #D4D4D4\">) {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #9CDCFE\">System</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #9CDCFE\">out</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">println</span><span style=\"color: #D4D4D4\">(line);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        } </span><span style=\"color: #C586C0\">catch</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #4EC9B0\">Exception</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">ex</span><span style=\"color: #D4D4D4\">) {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">ex</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">printStackTrace</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">}</span></span></code></pre></div><p><strong>写：</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.io.*;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">class</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">TxtFileWrite</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">static</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">void</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">main</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #4EC9B0\">String</span><span style=\"color: #D4D4D4\">[] </span><span style=\"color: #9CDCFE\">args</span><span style=\"color: #D4D4D4\">) {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #DCDCAA\">writeFile1</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #9CDCFE\">System</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #9CDCFE\">out</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">println</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"===================\"</span><span style=\"color: #D4D4D4\">);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">  </span><span style=\"color: #6A9955\">//法1</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">static</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">void</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">writeFile1</span><span style=\"color: #D4D4D4\">() {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">FileOutputStream</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">fos</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #569CD6\">null</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">OutputStreamWriter</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">osw</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #569CD6\">null</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">BufferedWriter</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">bw</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #569CD6\">null</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #C586C0\">try</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            fos = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">FileOutputStream</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"c:/temp/abc.txt\"</span><span style=\"color: #D4D4D4\">); </span><span style=\"color: #6A9955\">// 节点类</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            osw = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">OutputStreamWriter</span><span style=\"color: #D4D4D4\">(fos, </span><span style=\"color: #CE9178\">\"UTF-8\"</span><span style=\"color: #D4D4D4\">); </span><span style=\"color: #6A9955\">// 转化类</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            bw = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">BufferedWriter</span><span style=\"color: #D4D4D4\">(osw); </span><span style=\"color: #6A9955\">// 装饰类</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #6A9955\">// 上面三行可替换为下面一行</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #6A9955\">// br = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(\"c:/temp/abc.txt\"),\"UTF-8\"))</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">bw</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">write</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"我们是\"</span><span style=\"color: #D4D4D4\">);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">bw</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">newLine</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">bw</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">write</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"Ecnuers.^^\"</span><span style=\"color: #D4D4D4\">);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">bw</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">newLine</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        } </span><span style=\"color: #C586C0\">catch</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #4EC9B0\">Exception</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">ex</span><span style=\"color: #D4D4D4\">) {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">ex</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">printStackTrace</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        } </span><span style=\"color: #C586C0\">finally</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #C586C0\">try</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #9CDCFE\">bw</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">close</span><span style=\"color: #D4D4D4\">(); </span><span style=\"color: #6A9955\">// 关闭最后一个类，会将所有的底层流都关闭</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            } </span><span style=\"color: #C586C0\">catch</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #4EC9B0\">Exception</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">ex</span><span style=\"color: #D4D4D4\">) {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #9CDCFE\">ex</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">printStackTrace</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">  </span><span style=\"color: #6A9955\">//法2</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">static</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">void</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">writeFile2</span><span style=\"color: #D4D4D4\">() {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #6A9955\">// try-resource 语句，自动关闭资源</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #C586C0\">try</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #4EC9B0\">BufferedWriter</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">bw</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">BufferedWriter</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">OutputStreamWriter</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">FileOutputStream</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"c:/temp/abc.txt\"</span><span style=\"color: #D4D4D4\">)))) {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">bw</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">write</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"我们是\"</span><span style=\"color: #D4D4D4\">);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">bw</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">newLine</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">bw</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">write</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"Ecnuers.^^\"</span><span style=\"color: #D4D4D4\">);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">bw</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">newLine</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        } </span><span style=\"color: #C586C0\">catch</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #4EC9B0\">Exception</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">ex</span><span style=\"color: #D4D4D4\">) {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">ex</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">printStackTrace</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">}</span></span></code></pre></div><h4 id=\"二进制文件读写\"><a href=\"#二进制文件读写\" class=\"headerlink\" title=\"二进制文件读写\"></a>二进制文件读写</h4><p><strong>读：</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.io.*;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">class</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">BinFileRead</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">static</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">void</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">main</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #4EC9B0\">String</span><span style=\"color: #D4D4D4\">[] </span><span style=\"color: #9CDCFE\">args</span><span style=\"color: #D4D4D4\">) </span><span style=\"color: #569CD6\">throws</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">Exception</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #DCDCAA\">readFile</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">static</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">void</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">readFile</span><span style=\"color: #D4D4D4\">() {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #6A9955\">// try-resource 语句，自动关闭资源</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #C586C0\">try</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #4EC9B0\">DataInputStream</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">dis</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">DataInputStream</span><span style=\"color: #D4D4D4\">(</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">BufferedInputStream</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">FileInputStream</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"c:/temp/def.dat\"</span><span style=\"color: #D4D4D4\">)))) {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #4EC9B0\">String</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">a</span><span style=\"color: #D4D4D4\">, </span><span style=\"color: #9CDCFE\">b</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">c</span><span style=\"color: #D4D4D4\">, </span><span style=\"color: #9CDCFE\">d</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            a = </span><span style=\"color: #9CDCFE\">dis</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">readUTF</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            c = </span><span style=\"color: #9CDCFE\">dis</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">readInt</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            d = </span><span style=\"color: #9CDCFE\">dis</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">readInt</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            b = </span><span style=\"color: #9CDCFE\">dis</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">readUTF</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">System</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #9CDCFE\">out</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">println</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"a: \"</span><span style=\"color: #D4D4D4\"> + a);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">System</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #9CDCFE\">out</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">println</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"c: \"</span><span style=\"color: #D4D4D4\"> + c);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">System</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #9CDCFE\">out</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">println</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"d: \"</span><span style=\"color: #D4D4D4\"> + d);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">System</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #9CDCFE\">out</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">println</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"b: \"</span><span style=\"color: #D4D4D4\"> + b);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        } </span><span style=\"color: #C586C0\">catch</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #4EC9B0\">Exception</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">ex</span><span style=\"color: #D4D4D4\">) {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">ex</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">printStackTrace</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">}</span></span></code></pre></div><p><strong>写：</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.io.*;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">class</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">BinFileWrite</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">static</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">void</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">main</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #4EC9B0\">String</span><span style=\"color: #D4D4D4\">[] </span><span style=\"color: #9CDCFE\">args</span><span style=\"color: #D4D4D4\">) </span><span style=\"color: #569CD6\">throws</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">Exception</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #DCDCAA\">writeFile</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #9CDCFE\">System</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #9CDCFE\">out</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">println</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"done.\"</span><span style=\"color: #D4D4D4\">);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">static</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">void</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">writeFile</span><span style=\"color: #D4D4D4\">() {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">FileOutputStream</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">fos</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #569CD6\">null</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">DataOutputStream</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">dos</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #569CD6\">null</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">BufferedOutputStream</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">bos</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #569CD6\">null</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #C586C0\">try</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            fos = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">FileOutputStream</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"c:/temp/def.dat\"</span><span style=\"color: #D4D4D4\">); </span><span style=\"color: #6A9955\">// 节点类</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            bos = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">BufferedOutputStream</span><span style=\"color: #D4D4D4\">(fos); </span><span style=\"color: #6A9955\">// 装饰类</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            dos = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">DataOutputStream</span><span style=\"color: #D4D4D4\">(bos); </span><span style=\"color: #6A9955\">// 装饰类\t\t</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">dos</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">writeUTF</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"a\"</span><span style=\"color: #D4D4D4\">);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">dos</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">writeInt</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #B5CEA8\">20</span><span style=\"color: #D4D4D4\">);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">dos</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">writeInt</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #B5CEA8\">180</span><span style=\"color: #D4D4D4\">);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">dos</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">writeUTF</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"b\"</span><span style=\"color: #D4D4D4\">);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        } </span><span style=\"color: #C586C0\">catch</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #4EC9B0\">Exception</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">ex</span><span style=\"color: #D4D4D4\">) {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">ex</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">printStackTrace</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        } </span><span style=\"color: #C586C0\">finally</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #C586C0\">try</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #9CDCFE\">dos</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">close</span><span style=\"color: #D4D4D4\">(); </span><span style=\"color: #6A9955\">// 关闭最后一个类，会将所有的底层流都关闭</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            } </span><span style=\"color: #C586C0\">catch</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #4EC9B0\">Exception</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">ex</span><span style=\"color: #D4D4D4\">) {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #9CDCFE\">ex</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">printStackTrace</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">}</span></span></code></pre></div><h4 id=\"压缩文件读写\"><a href=\"#压缩文件读写\" class=\"headerlink\" title=\"压缩文件读写\"></a>压缩文件读写</h4><p><strong>单个文件压缩：</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.io.File;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.io.FileInputStream;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.io.InputStream;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.util.zip.ZipEntry;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.util.zip.ZipOutputStream;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.io.FileOutputStream;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">class</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">SingleFileZip</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">static</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">void</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">main</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #4EC9B0\">String</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">args</span><span style=\"color: #D4D4D4\">[]) </span><span style=\"color: #569CD6\">throws</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">Exception</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">File</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">file</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">File</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"c:/temp/abc.txt\"</span><span style=\"color: #D4D4D4\">); </span><span style=\"color: #6A9955\">// 定义要压缩的文件</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">File</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">zipFile</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">File</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"c:/temp/single2.zip\"</span><span style=\"color: #D4D4D4\">); </span><span style=\"color: #6A9955\">// 定义压缩文件名称</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">InputStream</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">input</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">FileInputStream</span><span style=\"color: #D4D4D4\">(file); </span><span style=\"color: #6A9955\">// 定义文件的输入流</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">ZipOutputStream</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">zipOut</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #569CD6\">null</span><span style=\"color: #D4D4D4\">; </span><span style=\"color: #6A9955\">// 声明压缩流对象</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        zipOut = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">ZipOutputStream</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">FileOutputStream</span><span style=\"color: #D4D4D4\">(zipFile));</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #9CDCFE\">zipOut</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">putNextEntry</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">ZipEntry</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #9CDCFE\">file</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">getName</span><span style=\"color: #D4D4D4\">())); </span><span style=\"color: #6A9955\">// 设置ZipEntry对象</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #9CDCFE\">zipOut</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">setComment</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"single file zip\"</span><span style=\"color: #D4D4D4\">); </span><span style=\"color: #6A9955\">// 设置注释</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #6A9955\">// 压缩过程</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">temp</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #B5CEA8\">0</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #C586C0\">while</span><span style=\"color: #D4D4D4\"> ((temp = </span><span style=\"color: #9CDCFE\">input</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">read</span><span style=\"color: #D4D4D4\">()) != -</span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #D4D4D4\">) { </span><span style=\"color: #6A9955\">// 读取内容</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">zipOut</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">write</span><span style=\"color: #D4D4D4\">(temp); </span><span style=\"color: #6A9955\">// 压缩输出</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #9CDCFE\">input</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">close</span><span style=\"color: #D4D4D4\">(); </span><span style=\"color: #6A9955\">// 关闭输入流</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #9CDCFE\">zipOut</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">close</span><span style=\"color: #D4D4D4\">(); </span><span style=\"color: #6A9955\">// 关闭输出流</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #9CDCFE\">System</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #9CDCFE\">out</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">println</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"single file zip done.\"</span><span style=\"color: #D4D4D4\">);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">}</span></span></code></pre></div><p><strong>多个文件压缩</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.io.File;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.io.FileInputStream;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.io.InputStream;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.util.zip.ZipEntry;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.util.zip.ZipOutputStream;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.io.FileOutputStream;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">class</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">MultipleFileZip</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">static</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">void</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">main</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #4EC9B0\">String</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">args</span><span style=\"color: #D4D4D4\">[]) </span><span style=\"color: #569CD6\">throws</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">Exception</span><span style=\"color: #D4D4D4\"> { </span><span style=\"color: #6A9955\">// 所有异常抛出</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">File</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">file</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">File</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"c:/temp/multiple\"</span><span style=\"color: #D4D4D4\">); </span><span style=\"color: #6A9955\">// 定义要压缩的文件夹</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">File</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">zipFile</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">File</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"c:/temp/multiple2.zip\"</span><span style=\"color: #D4D4D4\">); </span><span style=\"color: #6A9955\">// 定义压缩文件名称</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">InputStream</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">input</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #569CD6\">null</span><span style=\"color: #D4D4D4\">; </span><span style=\"color: #6A9955\">// 定义文件输入流</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">ZipOutputStream</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">zipOut</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #569CD6\">null</span><span style=\"color: #D4D4D4\">; </span><span style=\"color: #6A9955\">// 声明压缩流对象</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        zipOut = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">ZipOutputStream</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">FileOutputStream</span><span style=\"color: #D4D4D4\">(zipFile));</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #9CDCFE\">zipOut</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">setComment</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"multiple file zip\"</span><span style=\"color: #D4D4D4\">); </span><span style=\"color: #6A9955\">// 设置注释</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #6A9955\">// 开始压缩</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">temp</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #B5CEA8\">0</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #C586C0\">if</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #9CDCFE\">file</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">isDirectory</span><span style=\"color: #D4D4D4\">()) { </span><span style=\"color: #6A9955\">// 判断是否是文件夹</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #4EC9B0\">File</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">lists</span><span style=\"color: #D4D4D4\">[] = </span><span style=\"color: #9CDCFE\">file</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">listFiles</span><span style=\"color: #D4D4D4\">(); </span><span style=\"color: #6A9955\">// 列出全部子文件</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #C586C0\">for</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">i</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #B5CEA8\">0</span><span style=\"color: #D4D4D4\">; i &lt; </span><span style=\"color: #9CDCFE\">lists</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #9CDCFE\">length</span><span style=\"color: #D4D4D4\">; i++) {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                input = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">FileInputStream</span><span style=\"color: #D4D4D4\">(lists[i]); </span><span style=\"color: #6A9955\">// 定义文件的输入流</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #9CDCFE\">zipOut</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">putNextEntry</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">ZipEntry</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #9CDCFE\">file</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">getName</span><span style=\"color: #D4D4D4\">()</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                        + </span><span style=\"color: #9CDCFE\">File</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #9CDCFE\">separator</span><span style=\"color: #D4D4D4\"> + lists[i].</span><span style=\"color: #DCDCAA\">getName</span><span style=\"color: #D4D4D4\">())); </span><span style=\"color: #6A9955\">// 设置ZipEntry对象</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #9CDCFE\">System</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #9CDCFE\">out</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">println</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"正在压缩\"</span><span style=\"color: #D4D4D4\"> + lists[i].</span><span style=\"color: #DCDCAA\">getName</span><span style=\"color: #D4D4D4\">());</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #C586C0\">while</span><span style=\"color: #D4D4D4\"> ((temp = </span><span style=\"color: #9CDCFE\">input</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">read</span><span style=\"color: #D4D4D4\">()) != -</span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #D4D4D4\">) { </span><span style=\"color: #6A9955\">// 读取内容</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                    </span><span style=\"color: #9CDCFE\">zipOut</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">write</span><span style=\"color: #D4D4D4\">(temp); </span><span style=\"color: #6A9955\">// 压缩输出</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #9CDCFE\">input</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">close</span><span style=\"color: #D4D4D4\">(); </span><span style=\"color: #6A9955\">// 关闭输入流</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #9CDCFE\">zipOut</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">close</span><span style=\"color: #D4D4D4\">(); </span><span style=\"color: #6A9955\">// 关闭输出流</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #9CDCFE\">System</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #9CDCFE\">out</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">println</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"multiple file zip done.\"</span><span style=\"color: #D4D4D4\">);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">}</span></span></code></pre></div><p><strong>单个文件解压缩</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.io.File;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.io.FileInputStream;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.io.FileOutputStream;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.io.OutputStream;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.util.zip.ZipEntry;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.util.zip.ZipInputStream;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">class</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">SingleFileUnzip</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">static</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">void</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">main</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #4EC9B0\">String</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">args</span><span style=\"color: #D4D4D4\">[]) </span><span style=\"color: #569CD6\">throws</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">Exception</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #6A9955\">// 待解压文件, 需要从zip文件打开输入流，读取数据到java中</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">File</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">zipFile</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">File</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"c:/temp/single.zip\"</span><span style=\"color: #D4D4D4\">); </span><span style=\"color: #6A9955\">// 定义压缩文件名称</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">ZipInputStream</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">input</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #569CD6\">null</span><span style=\"color: #D4D4D4\">; </span><span style=\"color: #6A9955\">// 定义压缩输入流</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        input = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">ZipInputStream</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">FileInputStream</span><span style=\"color: #D4D4D4\">(zipFile)); </span><span style=\"color: #6A9955\">// 实例化ZIpInputStream</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">ZipEntry</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">entry</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #9CDCFE\">input</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">getNextEntry</span><span style=\"color: #D4D4D4\">(); </span><span style=\"color: #6A9955\">// 得到一个压缩实体</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #9CDCFE\">System</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #9CDCFE\">out</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">println</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"压缩实体名称：\"</span><span style=\"color: #D4D4D4\"> + </span><span style=\"color: #9CDCFE\">entry</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">getName</span><span style=\"color: #D4D4D4\">()); </span><span style=\"color: #6A9955\">// 获取压缩包中文件名字</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #6A9955\">// 新建目标文件，需要从目标文件打开输出流，数据从java流入</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">File</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">outFile</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">File</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"c:/temp/\"</span><span style=\"color: #D4D4D4\"> + </span><span style=\"color: #9CDCFE\">entry</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">getName</span><span style=\"color: #D4D4D4\">());</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">OutputStream</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">out</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">FileOutputStream</span><span style=\"color: #D4D4D4\">(outFile); </span><span style=\"color: #6A9955\">// 实例化文件输出流</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">temp</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #B5CEA8\">0</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #C586C0\">while</span><span style=\"color: #D4D4D4\"> ((temp = </span><span style=\"color: #9CDCFE\">input</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">read</span><span style=\"color: #D4D4D4\">()) != -</span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #D4D4D4\">) {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">out</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">write</span><span style=\"color: #D4D4D4\">(temp);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #9CDCFE\">input</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">close</span><span style=\"color: #D4D4D4\">(); </span><span style=\"color: #6A9955\">// 关闭输入流</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #9CDCFE\">out</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">close</span><span style=\"color: #D4D4D4\">(); </span><span style=\"color: #6A9955\">// 关闭输出流</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #9CDCFE\">System</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #9CDCFE\">out</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">println</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"unzip done.\"</span><span style=\"color: #D4D4D4\">);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">}</span></span></code></pre></div><p><strong>多个文件解压缩</strong></p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.io.File;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.io.OutputStream;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.io.InputStream;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.util.zip.ZipEntry;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.util.zip.ZipFile;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.util.zip.ZipInputStream;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.io.FileInputStream;</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">import</span><span style=\"color: #D4D4D4\"> java.io.FileOutputStream;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">class</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">MultipleFileUnzip</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">static</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">void</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">main</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #4EC9B0\">String</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">args</span><span style=\"color: #D4D4D4\">[]) </span><span style=\"color: #569CD6\">throws</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">Exception</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #6A9955\">// 待解压的zip文件，需要在zip文件上构建输入流，读取数据到Java中</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">File</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">file</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">File</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"c:/temp/multiple.zip\"</span><span style=\"color: #D4D4D4\">); </span><span style=\"color: #6A9955\">// 定义压缩文件名称</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">File</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">outFile</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #569CD6\">null</span><span style=\"color: #D4D4D4\">; </span><span style=\"color: #6A9955\">// 输出文件的时候要有文件夹的操作</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">ZipFile</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">zipFile</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">ZipFile</span><span style=\"color: #D4D4D4\">(file); </span><span style=\"color: #6A9955\">// 实例化ZipFile对象</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">ZipInputStream</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">zipInput</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #569CD6\">null</span><span style=\"color: #D4D4D4\">; </span><span style=\"color: #6A9955\">// 定义压缩输入流</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #6A9955\">// 定义解压的文件名</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">OutputStream</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">out</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #569CD6\">null</span><span style=\"color: #D4D4D4\">; </span><span style=\"color: #6A9955\">// 定义输出流，用于输出每一个实体内容</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">InputStream</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">input</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #569CD6\">null</span><span style=\"color: #D4D4D4\">; </span><span style=\"color: #6A9955\">// 定义输入流，读取每一个ZipEntry</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #4EC9B0\">ZipEntry</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">entry</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #569CD6\">null</span><span style=\"color: #D4D4D4\">; </span><span style=\"color: #6A9955\">// 每一个压缩实体</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        zipInput = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">ZipInputStream</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">FileInputStream</span><span style=\"color: #D4D4D4\">(file)); </span><span style=\"color: #6A9955\">// 实例化ZIpInputStream</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #6A9955\">// 遍历压缩包中的文件</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #C586C0\">while</span><span style=\"color: #D4D4D4\"> ((entry = </span><span style=\"color: #9CDCFE\">zipInput</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">getNextEntry</span><span style=\"color: #D4D4D4\">()) != </span><span style=\"color: #569CD6\">null</span><span style=\"color: #D4D4D4\">) { </span><span style=\"color: #6A9955\">// 得到一个压缩实体</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #9CDCFE\">System</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #9CDCFE\">out</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">println</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"解压缩\"</span><span style=\"color: #D4D4D4\"> + </span><span style=\"color: #9CDCFE\">entry</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">getName</span><span style=\"color: #D4D4D4\">() + </span><span style=\"color: #CE9178\">\"文件\"</span><span style=\"color: #D4D4D4\">);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            outFile = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">File</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"c:/temp/\"</span><span style=\"color: #D4D4D4\"> + </span><span style=\"color: #9CDCFE\">entry</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">getName</span><span style=\"color: #D4D4D4\">()); </span><span style=\"color: #6A9955\">// 定义输出的文件路径</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #C586C0\">if</span><span style=\"color: #D4D4D4\"> (!</span><span style=\"color: #9CDCFE\">outFile</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">getParentFile</span><span style=\"color: #D4D4D4\">().</span><span style=\"color: #DCDCAA\">exists</span><span style=\"color: #D4D4D4\">()) { </span><span style=\"color: #6A9955\">// 如果输出文件夹不存在</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #9CDCFE\">outFile</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">getParentFile</span><span style=\"color: #D4D4D4\">().</span><span style=\"color: #DCDCAA\">mkdirs</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #6A9955\">// 创建文件夹 ,如果这里的有多级文件夹不存在,请使用mkdirs()</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #6A9955\">// 如果只是单纯的一级文件夹,使用mkdir()就好了</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #C586C0\">if</span><span style=\"color: #D4D4D4\"> (!</span><span style=\"color: #9CDCFE\">outFile</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">exists</span><span style=\"color: #D4D4D4\">()) { </span><span style=\"color: #6A9955\">// 判断输出文件是否存在</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #C586C0\">if</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #9CDCFE\">entry</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">isDirectory</span><span style=\"color: #D4D4D4\">()) {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                    </span><span style=\"color: #9CDCFE\">outFile</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">mkdirs</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                    </span><span style=\"color: #9CDCFE\">System</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #9CDCFE\">out</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">println</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"create directory...\"</span><span style=\"color: #D4D4D4\">);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                } </span><span style=\"color: #C586C0\">else</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                    </span><span style=\"color: #9CDCFE\">outFile</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">createNewFile</span><span style=\"color: #D4D4D4\">(); </span><span style=\"color: #6A9955\">// 创建文件</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                    </span><span style=\"color: #9CDCFE\">System</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #9CDCFE\">out</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">println</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"create file...\"</span><span style=\"color: #D4D4D4\">);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #C586C0\">if</span><span style=\"color: #D4D4D4\"> (!</span><span style=\"color: #9CDCFE\">entry</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">isDirectory</span><span style=\"color: #D4D4D4\">()) {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                input = </span><span style=\"color: #9CDCFE\">zipFile</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">getInputStream</span><span style=\"color: #D4D4D4\">(entry); </span><span style=\"color: #6A9955\">// 得到每一个实体的输入流</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                out = </span><span style=\"color: #C586C0\">new</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">FileOutputStream</span><span style=\"color: #D4D4D4\">(outFile); </span><span style=\"color: #6A9955\">// 实例化文件输出流</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #4EC9B0\">int</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">temp</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #B5CEA8\">0</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #C586C0\">while</span><span style=\"color: #D4D4D4\"> ((temp = </span><span style=\"color: #9CDCFE\">input</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">read</span><span style=\"color: #D4D4D4\">()) != -</span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #D4D4D4\">) {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                    </span><span style=\"color: #9CDCFE\">out</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">write</span><span style=\"color: #D4D4D4\">(temp);</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #9CDCFE\">input</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">close</span><span style=\"color: #D4D4D4\">(); </span><span style=\"color: #6A9955\">// 关闭输入流</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #9CDCFE\">out</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">close</span><span style=\"color: #D4D4D4\">(); </span><span style=\"color: #6A9955\">// 关闭输出流</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #9CDCFE\">input</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">close</span><span style=\"color: #D4D4D4\">();</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">}</span></span></code></pre></div></p></p></p>","feature":true,"text":"Java常用类Java类库*包名以Java开始的包是Java核心包(Java Core Package)*： Module Description java.a...","permalink":"/post/Java学习笔记-二","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"12 mins."},"categories":[{"name":"Java","slug":"Java","count":5,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":5,"path":"api/tags/Java.json"},{"name":"异常","slug":"异常","count":1,"path":"api/tags/异常.json"},{"name":"文件操作","slug":"文件操作","count":2,"path":"api/tags/文件操作.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Java%E5%B8%B8%E7%94%A8%E7%B1%BB\"><span class=\"toc-text\">Java常用类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%AD%97%E7%9B%B8%E5%85%B3%E7%B1%BB\"><span class=\"toc-text\">数字相关类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3%E7%B1%BB%EF%BC%9A\"><span class=\"toc-text\">字符串相关类：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%97%B6%E9%97%B4%E7%9B%B8%E5%85%B3%E7%B1%BB%EF%BC%9A\"><span class=\"toc-text\">时间相关类：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%A0%BC%E5%BC%8F%E5%8C%96%E7%9B%B8%E5%85%B3%E7%B1%BB%EF%BC%9A\"><span class=\"toc-text\">格式化相关类：</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BC%82%E5%B8%B8%E5%8F%8A%E5%85%B6%E5%A4%84%E7%90%86\"><span class=\"toc-text\">异常及其处理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BC%82%E5%B8%B8%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">异常分类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86\"><span class=\"toc-text\">异常处理</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%82%E5%B8%B8\"><span class=\"toc-text\">自定义异常</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">数据结构</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">文件操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%EF%BC%9A\"><span class=\"toc-text\">文本文件读写：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99\"><span class=\"toc-text\">二进制文件读写</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8E%8B%E7%BC%A9%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99\"><span class=\"toc-text\">压缩文件读写</span></a></li></ol></li></ol>","author":{"name":"Ac-Accelerator","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"一位计算机技术爱好者，大学在读，目前正在学习C++、Python、Java和计算机系统以及计算机视觉深度学习等相关知识，欢迎交流","socials":{"github":"https://github.com/Ac-Accelerator","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_31702515?spm=1000.2115.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/74120250?spm_id_from=333.1007.0.0"},"rss":{"icon":"/svg/rss.svg","link":"atom.xml"},"qq":{"icon":"/svg/QQ.svg","link":"http://tool.gljlw.com/qq/?qq=2583832841"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"Java学习笔记(三)","uid":"0c89500007ef3b784b27319aeed34361","slug":"Java学习笔记-三","date":"2022-05-12T12:04:00.000Z","updated":"2023-10-01T19:57:24.428Z","comments":true,"path":"api/articles/Java学习笔记-三.json","keywords":"C++,Pyhton,Java,算法","cover":"/img/java3.jpeg","text":"Maven构建工具构建工具功能: 自动帮程序员甄别和下载第三方库(jar) 完成整个项目编译(调用javac.exe) 完成整个项目单元测试流程(调用Junit...","permalink":"/post/Java学习笔记-三","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"Java","slug":"Java","count":5,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":5,"path":"api/tags/Java.json"},{"name":"Maven","slug":"Maven","count":1,"path":"api/tags/Maven.json"},{"name":"语法糖","slug":"语法糖","count":1,"path":"api/tags/语法糖.json"},{"name":"泛型","slug":"泛型","count":1,"path":"api/tags/泛型.json"}],"author":{"name":"Ac-Accelerator","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"一位计算机技术爱好者，大学在读，目前正在学习C++、Python、Java和计算机系统以及计算机视觉深度学习等相关知识，欢迎交流","socials":{"github":"https://github.com/Ac-Accelerator","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_31702515?spm=1000.2115.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/74120250?spm_id_from=333.1007.0.0"},"rss":{"icon":"/svg/rss.svg","link":"atom.xml"},"qq":{"icon":"/svg/QQ.svg","link":"http://tool.gljlw.com/qq/?qq=2583832841"}}}},"feature":true},"next_post":{"title":"Java学习笔记(一)","uid":"4fcfa8e6703310350c6e3442c24e0c97","slug":"Java学习笔记-一","date":"2022-05-09T08:43:00.000Z","updated":"2023-07-13T18:25:05.830Z","comments":true,"path":"api/articles/Java学习笔记-一.json","keywords":"C++,Pyhton,Java,算法","cover":"/img/java1.jpeg","text":"前言本篇不具体介绍Java的具体细节和语法，只记录在笔者眼中的Java和C++ 的相同和不同之处，因此需要有C++ 基础。 类的结构和主函数 main函数的写法...","permalink":"/post/Java学习笔记-一","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[{"name":"Java","slug":"Java","count":5,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":5,"path":"api/tags/Java.json"}],"author":{"name":"Ac-Accelerator","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"一位计算机技术爱好者，大学在读，目前正在学习C++、Python、Java和计算机系统以及计算机视觉深度学习等相关知识，欢迎交流","socials":{"github":"https://github.com/Ac-Accelerator","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_31702515?spm=1000.2115.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/74120250?spm_id_from=333.1007.0.0"},"rss":{"icon":"/svg/rss.svg","link":"atom.xml"},"qq":{"icon":"/svg/QQ.svg","link":"http://tool.gljlw.com/qq/?qq=2583832841"}}}},"feature":true}}