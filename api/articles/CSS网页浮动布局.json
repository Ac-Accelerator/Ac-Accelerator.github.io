{"title":"网页浮动布局","uid":"71d1afeec993a23db80ca1627d2eb461","slug":"CSS网页浮动布局","date":"2022-04-04T16:57:37.000Z","updated":"2023-03-31T12:28:36.683Z","comments":true,"path":"api/articles/CSS网页浮动布局.json","keywords":"C++,Pyhton,Java,算法","cover":"img/css.jpeg","content":"<p><strong>多个块级元素纵向排列找标准流，多个块级元素横向排列找浮动</strong></p>\n<h3 id=\"浮动\"><a href=\"#浮动\" class=\"headerlink\" title=\"浮动\"></a>浮动</h3><p>先用标准流的父元素排列上下位置,之后内部子元素采取浮动排列左右位置。</p>\n<p>float属性定义浮动。<br>属性值有left和right。</p>\n<h3 id=\"浮动特性\"><a href=\"#浮动特性\" class=\"headerlink\" title=\"浮动特性\"></a>浮动特性</h3><ol>\n<li>脱离标准普通流的控制，移动到指定位置(俗称脱标)  </li>\n<li>浮动的盒子不再保留原先的位置</li>\n<li>如果多个盒子都设置了浮动，则它们会按照属性值一行内显示并且顶端对齐排列。</li>\n<li>浮动的元素是互相不会有缝隙，如果父级宽度装不下这些浮动的盒子，多出的盒子会另起一行对齐。</li>\n<li>任何元素都可以浮动。不管原先是什么模式的元素，添加浮动之后具有行内块元素相似的特性。</li>\n<li>浮动的盒子只会影响浮动盒子后面的标准流不会影响前面的标准流。</li>\n</ol>\n<h3 id=\"清除浮动\"><a href=\"#清除浮动\" class=\"headerlink\" title=\"清除浮动\"></a>清除浮动</h3><p>使用clear属性清除浮动，属性值有left、right、both(常用)。</p>\n<p>由于父级盒子很多情况下，不方便给高度，但是子盒子浮动又不占有位置，最后父级盒子高度为0时，就会影响下面的标准流盒子。</p>\n<p>清除浮动的本质是清除浮动元素造成的影响。如果父盒子本身有高度，则不需要清除浮动。清除浮动之后，父级就会根据浮动的子盒子自动检测高度。父级有了高度，就不会影响下面的标准流了。</p>\n<p>清除浮动常用策略：</p>\n<ol>\n<li>额外标签法会在浮动元素末尾添加一个空的块级元素标签。例如&lt; divstyle=” clear:both” &gt; &lt; /div &gt;，或者其他标签(如&lt; br /&gt;等)缺点是结构性较差。  </li>\n<li>给父级元素添加overflow:hidden属性，缺点是无法显示溢出部分。  </li>\n<li>对父元素使用类选择器添加如下CSS样式</li>\n</ol>\n<div class=\"language-css\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">css</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D7BA7D\">.clearfix:after</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #9CDCFE\">content</span><span style=\"color: #D4D4D4\"> : </span><span style=\"color: #CE9178\">\"\"</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #9CDCFE\">display</span><span style=\"color: #D4D4D4\"> : </span><span style=\"color: #CE9178\">block</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #9CDCFE\">height</span><span style=\"color: #D4D4D4\">: </span><span style=\"color: #B5CEA8\">0</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #9CDCFE\">clear</span><span style=\"color: #D4D4D4\"> : </span><span style=\"color: #CE9178\">both</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #9CDCFE\">visibility</span><span style=\"color: #D4D4D4\">: </span><span style=\"color: #CE9178\">hidden</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">}</span></span>\n<span class=\"line\"><span style=\"color: #D7BA7D\">.clearfix</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    *</span><span style=\"color: #9CDCFE\">zoom</span><span style=\"color: #D4D4D4\"> : </span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">}</span></span></code></pre></div><p>对父元素使用类选择器添加如下CSS样式</p>\n<div class=\"language-css\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">css</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D7BA7D\">.clearfix:before</span><span style=\"color: #D4D4D4\">, </span></span>\n<span class=\"line\"><span style=\"color: #D7BA7D\">.clearfix:after</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #9CDCFE\">content</span><span style=\"color: #D4D4D4\"> : </span><span style=\"color: #CE9178\">\" \"</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #9CDCFE\">display</span><span style=\"color: #D4D4D4\">: </span><span style=\"color: #CE9178\">table</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">}</span></span>\n<span class=\"line\"><span style=\"color: #D7BA7D\">.clearfix:after</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #9CDCFE\">clear</span><span style=\"color: #D4D4D4\">: </span><span style=\"color: #CE9178\">both</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">}</span></span>\n<span class=\"line\"><span style=\"color: #D7BA7D\">.clearfix</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #9CDCFE\">zoom</span><span style=\"color: #D4D4D4\">: </span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">}</span></span></code></pre></div>","feature":true,"text":"多个块级元素纵向排列找标准流，多个块级元素横向排列找浮动 浮动先用标准流的父元素排列上下位置,之后内部子元素采取浮动排列左右位置。 float属性定义浮动。属性...","permalink":"/post/CSS网页浮动布局","photos":[],"count_time":{"symbolsCount":981,"symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":10,"path":"api/categories/前端.json"}],"tags":[{"name":"CSS","slug":"CSS","count":8,"path":"api/tags/CSS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%AE%E5%8A%A8\"><span class=\"toc-text\">浮动</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%AE%E5%8A%A8%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">浮动特性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8\"><span class=\"toc-text\">清除浮动</span></a></li></ol>","author":{"name":"Ac-Accelerator","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"一位计算机技术爱好者，大学在读，目前正在学习C++、Python、Java和计算机系统以及计算机视觉深度学习等相关知识，欢迎交流","socials":{"github":"https://github.com/Ac-Accelerator","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_31702515?spm=1000.2115.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/74120250?spm_id_from=333.1007.0.0"},"rss":{"icon":"/svg/rss.svg","link":"atom.xml"},"qq":{"icon":"/svg/QQ.svg","link":"http://tool.gljlw.com/qq/?qq=2583832841"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"计算机网络(一)","uid":"f667b4d44d41991982b8841954899495","slug":"计算机网络(一)","date":"2022-05-05T02:13:00.000Z","updated":"2023-07-13T18:30:59.700Z","comments":true,"path":"api/articles/计算机网络(一).json","keywords":"C++,Pyhton,Java,算法","cover":"/img/network1.jpeg","text":"计算机网络初步概念计算机网络是一个将分散的、具有独立功能的计算机系统，通过通信设备与线路连接起来，由功能完善的软件实现资源共享和信息传递的系统。 计算机网络是互...","permalink":"/post/计算机网络(一)","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[{"name":"网络","slug":"网络","count":4,"path":"api/categories/网络.json"}],"tags":[{"name":"网络","slug":"网络","count":4,"path":"api/tags/网络.json"},{"name":"网络体系结构","slug":"网络体系结构","count":1,"path":"api/tags/网络体系结构.json"},{"name":"物理层","slug":"物理层","count":1,"path":"api/tags/物理层.json"}],"author":{"name":"Ac-Accelerator","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"一位计算机技术爱好者，大学在读，目前正在学习C++、Python、Java和计算机系统以及计算机视觉深度学习等相关知识，欢迎交流","socials":{"github":"https://github.com/Ac-Accelerator","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_31702515?spm=1000.2115.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/74120250?spm_id_from=333.1007.0.0"},"rss":{"icon":"/svg/rss.svg","link":"atom.xml"},"qq":{"icon":"/svg/QQ.svg","link":"http://tool.gljlw.com/qq/?qq=2583832841"}}}},"feature":true},"next_post":{"title":"CSS网页标准布局和美化","uid":"2cd531c7170c2dbe47cea834debb4679","slug":"CSS网页标准布局和美化","date":"2022-04-04T02:57:00.000Z","updated":"2023-03-31T12:26:58.497Z","comments":true,"path":"api/articles/CSS网页标准布局和美化.json","keywords":"C++,Pyhton,Java,算法","cover":"img/css.jpeg","text":"&gt;网页布局就是利用CSS摆盒子。 布局盒子边框border：&lt;line-width&gt; || &lt;line-style&gt; || &lt...","permalink":"/post/CSS网页标准布局和美化","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":10,"path":"api/categories/前端.json"}],"tags":[{"name":"CSS","slug":"CSS","count":8,"path":"api/tags/CSS.json"}],"author":{"name":"Ac-Accelerator","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"一位计算机技术爱好者，大学在读，目前正在学习C++、Python、Java和计算机系统以及计算机视觉深度学习等相关知识，欢迎交流","socials":{"github":"https://github.com/Ac-Accelerator","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_31702515?spm=1000.2115.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/74120250?spm_id_from=333.1007.0.0"},"rss":{"icon":"/svg/rss.svg","link":"atom.xml"},"qq":{"icon":"/svg/QQ.svg","link":"http://tool.gljlw.com/qq/?qq=2583832841"}}}},"feature":true}}