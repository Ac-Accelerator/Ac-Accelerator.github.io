{"title":"STM32入门（二）：开发环境配置","uid":"38fc18eebdbdaec5f989594360c2293b","slug":"STM32入门（二）：开发环境配置","date":"2023-07-14T06:13:00.000Z","updated":"2023-07-16T03:51:40.188Z","comments":true,"path":"api/articles/STM32入门（二）：开发环境配置.json","keywords":"C++,Pyhton,Java,算法","cover":"/img/STM32cover.png","content":"<h2 id=\"操作系统环境\"><a href=\"#操作系统环境\" class=\"headerlink\" title=\"操作系统环境\"></a>操作系统环境</h2><p>Ubuntu 22.04.2 LTS</p>\n<h2 id=\"开发软件配置\"><a href=\"#开发软件配置\" class=\"headerlink\" title=\"开发软件配置\"></a>开发软件配置</h2><p>Visual Studio Code</p>\n<h3 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h3><ul>\n<li>C/C++</li>\n<li>PlatformIO IDE</li>\n</ul>\n<h2 id=\"新建PlatformIO工程\"><a href=\"#新建PlatformIO工程\" class=\"headerlink\" title=\"新建PlatformIO工程\"></a>新建PlatformIO工程</h2><h3 id=\"配置PlatformIO\"><a href=\"#配置PlatformIO\" class=\"headerlink\" title=\"配置PlatformIO\"></a>配置PlatformIO</h3><p>在PlatformIO主页面中选择platform页面，安装一个嵌入式平台，选择ST STM32。</p>\n<p>在PlatformIO主页面中选择Project页面，点击New Project按钮，选择STM32F103ZE作为开发板，该芯片支持很多框架，这里选择STM32Cube，点击Finish按钮，即可新建一个PlatformIO工程。</p>\n<p>可以看到配置文件如下所示，由于我使用的是正点原子的F1精英开发板以及stlink下载器，所以添加最后两行用于指定上传和调试工具，避免其使用默认的工具导致出现错误。</p>\n<div class=\"language-ini\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">ini</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D4D4D4\">[env:genericSTM32F103ZE]</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">platform</span><span style=\"color: #D4D4D4\"> = ststm32</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">board</span><span style=\"color: #D4D4D4\"> = genericSTM32F103ZE</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">framework</span><span style=\"color: #D4D4D4\"> = stm32cube</span></span>\n<span class=\"line\"><span style=\"color: #6A9955\">;添加如下两行</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">upload_protocol</span><span style=\"color: #D4D4D4\"> = stlink </span><span style=\"color: #6A9955\">; 上传工具</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">debug_tool</span><span style=\"color: #D4D4D4\"> = stlink      </span><span style=\"color: #6A9955\">; 调试工具</span></span></code></pre></div><p>如果需要指定更多配置，可以参考<a href=\"https://docs.platformio.org/en/latest/projectconf/index.html\">官方文档</a>。</p>\n<h2 id=\"文件夹介绍\"><a href=\"#文件夹介绍\" class=\"headerlink\" title=\"文件夹介绍\"></a>文件夹介绍</h2><p>可以看到PlatformIO自动为我们生成了一个简单的工程，其中有很多文件夹，各个文件夹的用途写在了对应的readme文件中。</p>\n<h3 id=\"lib\"><a href=\"#lib\" class=\"headerlink\" title=\"lib\"></a>lib</h3><p>该目录适用于项目特定的（私有）库。<br>PlatformIO 将它们编译为静态库并链接到可执行文件。</p>\n<p>每个库的源代码应该放在自己单独的目录中<br>（“lib/your_library_name/[这里是源文件]”）。</p>\n<p>例如，以下两个库“Foo”和“Bar”的结构：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D4D4D4\">|--lib</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">|  |</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">|  |--Bar</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">|  |  |--docs</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">|  |  |--examples</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">|  |  |--src</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">|  |     |- Bar.c</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">|  |     |- Bar.h</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">|  |  |- library.json (optional, custom build options, etc) https://docs.platformio.org/page/librarymanager/config.html</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">|  |</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">|  |--Foo</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">|  |  |- Foo.c</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">|  |  |- Foo.h</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">|</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">|- platformio.ini</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">|--src</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">   |- main.c</span></span></code></pre></div><p>在源文件中，您可以使用以下方式包含库头文件：</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C586C0\">#include</span><span style=\"color: #569CD6\"> </span><span style=\"color: #CE9178\">&lt;Foo.h&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C586C0\">#include</span><span style=\"color: #569CD6\"> </span><span style=\"color: #CE9178\">&lt;Bar.h&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #569CD6\">int</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">main</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #569CD6\">void</span><span style=\"color: #D4D4D4\">)</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">}</span></span></code></pre></div><h3 id=\"src、include\"><a href=\"#src、include\" class=\"headerlink\" title=\"src、include\"></a>src、include</h3><p>在src里面编写的源文件可以使用include目录下的头文件。</p>\n<h3 id=\"test\"><a href=\"#test\" class=\"headerlink\" title=\"test\"></a>test</h3><p>单元测试文件夹,具体用法如下</p>\n<p><a href=\"https://piolabs.com/blog/insights/unit-testing-part-1.html\">基础</a></p>\n<p><a href=\"https://piolabs.com/blog/insights/unit-testing-part-2.html\">在嵌入式设备上运行</a></p>\n<p><a href=\"https://piolabs.com/blog/insights/unit-testing-part-3.html\">持续集成和远程测试</a></p>\n<h2 id=\"STM32Cube库文件\"><a href=\"#STM32Cube库文件\" class=\"headerlink\" title=\"STM32Cube库文件\"></a>STM32Cube库文件</h2><img src=\"\\img\\STM32Cube.bmp\">\n\n<p>目录~/.platformio/packages/framework-stm32cubef1下的文件如上图所示。</p>\n<p>其中~/.platformio/packages/framework-stm32cubef1/Drivers/STM32F1xx_HAL_Driver 文件夹就是HAL库和LL库所在的位置。</p>\n","feature":true,"text":"操作系统环境Ubuntu 22.04.2 LTS 开发软件配置Visual Studio Code 安装插件 C/C++ PlatformIO IDE 新建Pl...","permalink":"/post/STM32入门（二）：开发环境配置","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"嵌入式","slug":"嵌入式","count":8,"path":"api/categories/嵌入式.json"}],"tags":[{"name":"STM32","slug":"STM32","count":8,"path":"api/tags/STM32.json"},{"name":"单片机","slug":"单片机","count":8,"path":"api/tags/单片机.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">操作系统环境</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%80%E5%8F%91%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">开发软件配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">安装插件</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B0%E5%BB%BAPlatformIO%E5%B7%A5%E7%A8%8B\"><span class=\"toc-text\">新建PlatformIO工程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AEPlatformIO\"><span class=\"toc-text\">配置PlatformIO</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E5%A4%B9%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">文件夹介绍</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#lib\"><span class=\"toc-text\">lib</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#src%E3%80%81include\"><span class=\"toc-text\">src、include</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#test\"><span class=\"toc-text\">test</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#STM32Cube%E5%BA%93%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">STM32Cube库文件</span></a></li></ol>","author":{"name":"Ac-Accelerator","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"一位计算机技术爱好者，大学在读，目前正在学习C++、Python、Java和计算机系统以及计算机视觉深度学习等相关知识，欢迎交流","socials":{"github":"https://github.com/Ac-Accelerator","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_31702515?spm=1000.2115.3001.5343","juejin":"","customs":{"qq":{"icon":"/svg/QQ.svg","link":"http://tool.gljlw.com/qq/?qq=2583832841"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"STM32入门（三）：时钟配置","uid":"4ec857b23ce5e6dcd3e699fe4235ea27","slug":"STM32入门（三）：时钟配置","date":"2023-07-14T09:04:28.000Z","updated":"2023-09-25T16:37:41.449Z","comments":true,"path":"api/articles/STM32入门（三）：时钟配置.json","keywords":"C++,Pyhton,Java,算法","cover":"/img/STM32cover.png","text":"基本上所有的单片机功能都离不开时钟的帮助啦！所以时钟的配置是非常重要的。基本上是单片机开发的第一步呢！ 时钟系统初始化 cpp#include &lt;stm3...","permalink":"/post/STM32入门（三）：时钟配置","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"嵌入式","slug":"嵌入式","count":8,"path":"api/categories/嵌入式.json"}],"tags":[{"name":"STM32","slug":"STM32","count":8,"path":"api/tags/STM32.json"},{"name":"单片机","slug":"单片机","count":8,"path":"api/tags/单片机.json"}],"author":{"name":"Ac-Accelerator","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"一位计算机技术爱好者，大学在读，目前正在学习C++、Python、Java和计算机系统以及计算机视觉深度学习等相关知识，欢迎交流","socials":{"github":"https://github.com/Ac-Accelerator","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_31702515?spm=1000.2115.3001.5343","juejin":"","customs":{"qq":{"icon":"/svg/QQ.svg","link":"http://tool.gljlw.com/qq/?qq=2583832841"}}}},"feature":true},"next_post":{"title":"STM32入门（一）：认识STM32","uid":"d680335def93df41c247e0c4f534ee20","slug":"STM32入门（一）：认识STM32","date":"2023-07-13T08:31:43.000Z","updated":"2023-07-16T03:52:07.346Z","comments":true,"path":"api/articles/STM32入门（一）：认识STM32.json","keywords":"C++,Pyhton,Java,算法","cover":"/img/STM32cover.png","text":"产品类型STM32分为小容量、中容量、大容量和互联型产品。 小容量产品是指闪存存储器容量在16K至32K字节之间的STM32F101xx、STM32F102xx...","permalink":"/post/STM32入门（一）：认识STM32","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"嵌入式","slug":"嵌入式","count":8,"path":"api/categories/嵌入式.json"}],"tags":[{"name":"STM32","slug":"STM32","count":8,"path":"api/tags/STM32.json"},{"name":"单片机","slug":"单片机","count":8,"path":"api/tags/单片机.json"}],"author":{"name":"Ac-Accelerator","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"一位计算机技术爱好者，大学在读，目前正在学习C++、Python、Java和计算机系统以及计算机视觉深度学习等相关知识，欢迎交流","socials":{"github":"https://github.com/Ac-Accelerator","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_31702515?spm=1000.2115.3001.5343","juejin":"","customs":{"qq":{"icon":"/svg/QQ.svg","link":"http://tool.gljlw.com/qq/?qq=2583832841"}}}},"feature":true}}