{"title":"Spring Boot","uid":"cee75310a6ad538e1f2e1c9426d13379","slug":"Spring-Boot","date":"2023-11-01T14:25:33.000Z","updated":"2023-11-05T06:23:47.294Z","comments":true,"path":"api/articles/Spring-Boot.json","keywords":"C++,Pyhton,Java,算法","cover":"/img/spring.jpeg","content":"<h1 id=\"Spring-Boot\"><a href=\"#Spring-Boot\" class=\"headerlink\" title=\"Spring Boot\"></a>Spring Boot</h1><h2 id=\"Spring-Boot是什么\"><a href=\"#Spring-Boot是什么\" class=\"headerlink\" title=\"Spring Boot是什么\"></a>Spring Boot是什么</h2><p>上文关于Spring的介绍中提过，Spring是一个开发的生态圈，它提供了若干个项目，每个项目可以完成独立的功能。其中一个就是Spring Boot，它是一个快速构建项目的框架，让开发者可以在简化开发的基础上更进一步加速开发。在原有的基础上<strong>使开发更加简单，写更少的代码</strong>。</p>\n<h2 id=\"Spring-Boot创建\"><a href=\"#Spring-Boot创建\" class=\"headerlink\" title=\"Spring Boot创建\"></a>Spring Boot创建</h2><p><a href=\"https://start.spring.io/\">这个页面</a>是Spring Boot的官方创建页面，可以在非常方便的创建一个Spring Boot项目。在这个页面中，按照自己的需求填写相关信息，然后点击Generate，就可以下载一个Spring Boot项目的压缩包。</p>\n<p>除了在官方页面中创建，也可以在IDEA或Vscode中创建。其实IDE也是调用了官方的创建页面。因此，创建Spring Boot项目是需要联网的。（虽然也可以不联网手写，但是这已经失去了Spring Boot为开发者带来便利的初衷了。）</p>\n<p>从官方页面中下载的压缩包解压后，可以看到如下的目录结构：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D4D4D4\">demo</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">├── HELP.md</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">├── mvnw</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">├── mvnw.cmd</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">├── pom.xml</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">└── src</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    ├── main</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    │   ├── java</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    │   │   └── com</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    │   │       └── example</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    │   │           └── demo</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    │   │               └── DemoApplication.java</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    │   └── resources</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    │       ├── application.properties</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    │       ├── static</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    │       └── templates</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    └── test</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        └── java</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            └── com</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                └── example</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                    └── demo</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                        └── DemoApplicationTests.java</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\"></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">14 directories, 7 files</span></span></code></pre></div><h2 id=\"Spring-Boot-Web开发\"><a href=\"#Spring-Boot-Web开发\" class=\"headerlink\" title=\"Spring Boot Web开发\"></a>Spring Boot Web开发</h2><p>Spring Boot的方便之处就在于，在简单创建Spring Boot项目后，不用更改其他设置，只需要简单的编写类，就可以实现一个简单的Web应用。</p>\n<p>在新建Spring Boot项目（要选择 Spring Web）后，接着新建一个类<code>com.example.controller.UserController</code>,写入如下代码（Spring MVC开发）：</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D4D4D4\">@</span><span style=\"color: #4EC9B0\">RestController</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">@</span><span style=\"color: #4EC9B0\">RequestMapping</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"/user\"</span><span style=\"color: #D4D4D4\">)</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">class</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">UserController</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    @</span><span style=\"color: #4EC9B0\">GetMapping</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #CE9178\">\"/{id}\"</span><span style=\"color: #D4D4D4\">)</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">String</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">getUserById</span><span style=\"color: #D4D4D4\">(@</span><span style=\"color: #4EC9B0\">PathVariable</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">String</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">id</span><span style=\"color: #D4D4D4\">) {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #C586C0\">return</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #CE9178\">\"user + \"</span><span style=\"color: #D4D4D4\"> + id;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">}</span></span></code></pre></div><p>点击运行即可跑起一个简单的Web应用。在浏览器中输入<code>localhost:8080/user/1</code>，即可看到返回的结果。</p>\n<p>上述例子可以看到，Spring Boot简化了Spring Mvc的开发，并不需要像Spring Mvc那样需要编写配置类、手动添加依赖，配置Tomcat。框架的好处不就在于能自动完成这些繁琐的工作吗？就算不去配置也能达到大部分人想要的效果。</p>\n<h2 id=\"Spring-Boot原理\"><a href=\"#Spring-Boot原理\" class=\"headerlink\" title=\"Spring Boot原理\"></a>Spring Boot原理</h2><p>Spring Boot能够简化开发，那么它是如何做到的呢？</p>\n<p>在项目的创建过程中，Spring Boot以图形化的界面让开发者选择需要的功能，然后根据开发者的选择，自动添加依赖。这些依赖项就在<code>pom.xml</code>文件中，如下：</p>\n<div class=\"language-xml\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">xml</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #808080\">&lt;?</span><span style=\"color: #569CD6\">xml</span><span style=\"color: #9CDCFE\"> version</span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #CE9178\">\"1.0\"</span><span style=\"color: #9CDCFE\"> encoding</span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #CE9178\">\"UTF-8\"</span><span style=\"color: #808080\">?&gt;</span></span>\n<span class=\"line\"><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">project</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">xmlns</span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #CE9178\">\"http://maven.apache.org/POM/4.0.0\"</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">xmlns:xsi</span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #CE9178\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #9CDCFE\">xsi:schemaLocation</span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #CE9178\">\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">modelVersion</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">4.0.0</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">modelVersion</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">parent</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">groupId</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">org.springframework.boot</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">groupId</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">artifactId</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">spring-boot-starter-parent</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">artifactId</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">version</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">3.1.5</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">version</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">relativePath</span><span style=\"color: #808080\">/&gt;</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #6A9955\">&lt;!-- lookup parent from repository --&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">parent</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">groupId</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">com.example</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">groupId</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">artifactId</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">demo</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">artifactId</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">version</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">0.0.1-SNAPSHOT</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">version</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">name</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">demo</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">name</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">description</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">Demo project for Spring Boot</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">description</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">properties</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">java.version</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">17</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">java.version</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">properties</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">dependencies</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">dependency</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">groupId</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">org.springframework.boot</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">groupId</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">artifactId</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">spring-boot-starter-web</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">artifactId</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">dependency</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">dependency</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">groupId</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">org.springframework.boot</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">groupId</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">artifactId</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">spring-boot-starter-test</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">artifactId</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">scope</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">test</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">scope</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">dependency</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">dependencies</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">build</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">plugins</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">plugin</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">groupId</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">org.springframework.boot</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">groupId</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">artifactId</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">spring-boot-maven-plugin</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">artifactId</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">plugin</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">plugins</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">build</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">project</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"></span></code></pre></div><p>首先看到 &lt;parent&gt;标签,表明该配置文件从<code>spring-boot-starter-parent</code>继承了一系列的属性和配置。</p>\n<p>可以查看<code>spring-boot-starter-parent-x.x.x.pom</code>,里面基本上都是一些maven插件的配置，该pom文件的&lt;parent&gt;标签表明它从<code>spring-boot-dependencies</code>继承了一系列的依赖项。</p>\n<p>查看<code>spring-boot-dependencies-x.x.x.pom</code>，可以看到这个pom文件提供了依赖管理的功能，它定义了常用的第三方库的版本号，保证这些库在版本方面互相兼容（所以导入常用的第三方库时可以不用写版本号）。</p>\n<p>回到<code>pom.xml</code>文件，接着看到<code>&lt;dependencies&gt;</code>标签，这里面就是项目的依赖项，可以看到<code>spring-boot-starter-web</code>，这个依赖项包含了Spring Boot Web开发所需要的依赖项，而<code>spring-boot-starter-test</code>则是测试所需要的依赖项。</p>\n<p>在插件的部分可以看到<code>spring-boot-maven-plugin</code>，这个插件的功能有：把项目打包成可执行的jar或war文件、运行Spring Boot应用程序、生成构建信息并在运行集成测试之前启动Spring Boot应用程序，该插件默认包含在Spring Boot项目的pom.xml文件中。</p>\n<p>由此可见，Spring Boot工程的pom.xml文件：</p>\n<ol>\n<li>通过继承<code>spring-boot-starter-parent</code>，定义了常用的第三方库的版本号，使我们不用关系版本依赖问题；定义了一些maven插件，简化了开发者的工作。</li>\n<li>通过导入<code>spring-boot-starter-xxx</code>依赖项，批量导入了实现对应功能所需要的常用依赖项。</li>\n<li>通过导入<code>spring-boot-maven-plugin</code>插件，实现了打包成可执行的jar或war文件、运行、测试等功能。</li>\n</ol>\n<p>现在来回答为什么在Spring Boot中不用配置Tomcat就能运行Web应用的问题。在<code>spring-boot-starter-web</code>依赖项中，有一个<code>spring-boot-starter-tomcat</code>依赖项，这个依赖项中包含了内嵌的Tomcat。因此，Spring Boot中不需要配置Tomcat，就可以运行Web应用。这是Spring Boot为开发者提供的辅助功能。</p>\n<p>而且，在Spring Boot中，不仅仅是Tomcat，还可以内嵌Jetty、Undertow等容器。拿Jetty来说，需要对<code>pom.xml</code>文件进行如下配置：</p>\n<div class=\"language-xml\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">xml</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">dependency</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">groupId</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">org.springframework.boot</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">groupId</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">artifactId</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">spring-boot-starter-web</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">artifactId</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">exclusions</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #6A9955\">&lt;!-- 排除掉默认的tomcat起步依赖 --&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">exclusion</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                    </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">groupId</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">org.springframework.boot</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">groupId</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                    </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">artifactId</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">spring-boot-starter-tomcat</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">artifactId</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">                </span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">exclusion</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">exclusions</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">dependency</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #6A9955\">&lt;!-- 添加jetty的起步依赖 --&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">dependency</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">groupId</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">org.springframework.boot</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">groupId</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">artifactId</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">spring-boot-starter-jetty</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">artifactId</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">dependency</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #6A9955\">&lt;!-- 虽然jetty的起步依赖包含了jakarta.servlet-api，但是由于版本版本匹配问题，需要覆盖掉默认的依赖 --&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">dependency</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">groupId</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">jakarta.servlet</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">groupId</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">artifactId</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">jakarta.servlet-api</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">artifactId</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">version</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">5.0.0</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">version</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">            </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">scope</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">compile</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">scope</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">dependency</span><span style=\"color: #808080\">&gt;</span></span></code></pre></div><p>这样，在点击启动的时候就可以使用jetty容器了。由此可见Spring Boot项目在换技术栈的时候，也是非常方便的。</p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p><p>如果要更改起步依赖所包含的依赖项的版本（如j<code>akarta.servlet-api</code>的版本），除了可以向上面那样直接覆盖，还可以在pom.xml文件的 &lt;properties&gt;属性中添加：</p>\n<div class=\"language-xml\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">xml</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">properties</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">jakarta-servlet.version</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #D4D4D4\">5.0.0</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">jakarta-servlet.version</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">properties</span><span style=\"color: #808080\">&gt;</span></span></code></pre></div><p>这两者可以达到同样的效果。</p>\n</p>\n</div>\n<h2 id=\"Spring-Boot配置\"><a href=\"#Spring-Boot配置\" class=\"headerlink\" title=\"Spring Boot配置\"></a>Spring Boot配置</h2><p>在Spring Boot中，可以通过修改配置文件来对项目的属性进行配置。Spring Boot提供了三种格式的配置文件：application.properties、application.yml、application.yaml。它们一般都存放在src/main/resources目录下，且<strong>文件名都为application</strong>。它们虽然拓展名不同，格式也不同，但是都能提供相同的功能。</p>\n<p>YAML是一种层级格式，它和.properties很容易互相转换，它的优点是去掉了大量重复的前缀，并且更加易读。</p>\n<p>但是，如果同时存不同格式的配置文件，优先级是application.properties &gt; application.yml &gt; application.yaml。而且并不会合并，只会使用优先级最高的那个。</p>\n<p>这是一个yaml配置文件的实例</p>\n<div class=\"language-yaml\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">yaml</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6A9955\"># application.yaml</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #569CD6\">server</span><span style=\"color: #D4D4D4\">:</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">  </span><span style=\"color: #569CD6\">port</span><span style=\"color: #D4D4D4\">: </span><span style=\"color: #B5CEA8\">8081</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #569CD6\">spring</span><span style=\"color: #D4D4D4\">:</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">  </span><span style=\"color: #569CD6\">application</span><span style=\"color: #D4D4D4\">:</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">name</span><span style=\"color: #D4D4D4\">: </span><span style=\"color: #CE9178\">test</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">  </span><span style=\"color: #569CD6\">datasource</span><span style=\"color: #D4D4D4\">:</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">url</span><span style=\"color: #D4D4D4\">: </span><span style=\"color: #CE9178\">jdbc:hsqldb:file:testdb</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">username</span><span style=\"color: #D4D4D4\">: </span><span style=\"color: #CE9178\">root</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">password</span><span style=\"color: #D4D4D4\">: </span><span style=\"color: #B5CEA8\">123456</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">driver-class-name</span><span style=\"color: #D4D4D4\">: </span><span style=\"color: #CE9178\">org.hsqldb.jdbc.JDBCDriver</span></span>\n<span class=\"line\"></span></code></pre></div><p>spring boot 编译的jar包是可以运行的，而可以通过传入运行时参数来修改配置。如，想把服务器的端口修改为8081端口。在运行时可以这样写：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D4D4D4\">java -jar jar包文件名 --server.port=8081</span></span></code></pre></div><p>配置文件的内容还可以在Bean中读取，如：</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D4D4D4\">@</span><span style=\"color: #4EC9B0\">Component</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">@</span><span style=\"color: #4EC9B0\">ConfigurationProperties</span><span style=\"color: #D4D4D4\">(prefix = </span><span style=\"color: #CE9178\">\"spring.datasource\"</span><span style=\"color: #D4D4D4\">)</span></span>\n<span class=\"line\"><span style=\"color: #569CD6\">public</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">class</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">DataSourceProperties</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">private</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">String</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">url</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">private</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">String</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">username</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">private</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">String</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">password</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #569CD6\">private</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\">String</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">driverClassName</span><span style=\"color: #D4D4D4\">;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #6A9955\">// getter and setter</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">}</span></span></code></pre></div><p>这样配置文件中的内容就会被读取到Bean中。还有其他的用法，这里仅仅例举一种。</p>\n","feature":true,"text":"Spring BootSpring Boot是什么上文关于Spring的介绍中提过，Spring是一个开发的生态圈，它提供了若干个项目，每个项目可以完成独立的功...","permalink":"/post/Spring-Boot","photos":[],"count_time":{"symbolsCount":"7k","symbolsTime":"6 mins."},"categories":[{"name":"Java","slug":"Java","count":6,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":6,"path":"api/tags/Java.json"},{"name":"Web开发","slug":"Web开发","count":3,"path":"api/tags/Web开发.json"},{"name":"Spring","slug":"Spring","count":2,"path":"api/tags/Spring.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Spring-Boot\"><span class=\"toc-text\">Spring Boot</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Spring-Boot%E6%98%AF%E4%BB%80%E4%B9%88\"><span class=\"toc-text\">Spring Boot是什么</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Spring-Boot%E5%88%9B%E5%BB%BA\"><span class=\"toc-text\">Spring Boot创建</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Spring-Boot-Web%E5%BC%80%E5%8F%91\"><span class=\"toc-text\">Spring Boot Web开发</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Spring-Boot%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">Spring Boot原理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Spring-Boot%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">Spring Boot配置</span></a></li></ol></li></ol>","author":{"name":"Ac-Accelerator","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"一位计算机技术爱好者，大学在读，目前正在学习C++、Python、Java和计算机系统以及计算机视觉深度学习等相关知识，欢迎交流","socials":{"github":"https://github.com/Ac-Accelerator","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_31702515?spm=1000.2115.3001.5343","juejin":"","customs":{"qq":{"icon":"/svg/QQ.svg","link":"http://tool.gljlw.com/qq/?qq=2583832841"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"Linux系统编程（文件操作）","uid":"e27fddc9922de42aba7a0e5c52964723","slug":"Linux系统编程（文件操作）","date":"2024-02-03T01:58:46.000Z","updated":"2024-08-19T04:37:32.871Z","comments":true,"path":"api/articles/Linux系统编程（文件操作）.json","keywords":"C++,Pyhton,Java,算法","cover":"img/linux.jpeg","text":"getopt函数c#include &lt;unistd.h&gt; int getopt(int argc, char * const argv[], con...","permalink":"/post/Linux系统编程（文件操作）","photos":[],"count_time":{"symbolsCount":"22k","symbolsTime":"20 mins."},"categories":[{"name":"Linux","slug":"Linux","count":8,"path":"api/categories/Linux.json"}],"tags":[{"name":"C++","slug":"C","count":12,"path":"api/tags/C.json"},{"name":"Linux","slug":"Linux","count":8,"path":"api/tags/Linux.json"}],"author":{"name":"Ac-Accelerator","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"一位计算机技术爱好者，大学在读，目前正在学习C++、Python、Java和计算机系统以及计算机视觉深度学习等相关知识，欢迎交流","socials":{"github":"https://github.com/Ac-Accelerator","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_31702515?spm=1000.2115.3001.5343","juejin":"","customs":{"qq":{"icon":"/svg/QQ.svg","link":"http://tool.gljlw.com/qq/?qq=2583832841"}}}},"feature":true},"next_post":{"title":"Java Spring","uid":"2131252b43aa75d3feeb9162c4eec1e2","slug":"Java-Spring","date":"2023-10-05T08:13:00.000Z","updated":"2023-11-01T14:28:50.010Z","comments":true,"path":"api/articles/Java-Spring.json","keywords":"C++,Pyhton,Java,算法","cover":"/img/spring.jpeg","text":"什么是SpringSpring是一个开发的生态圈，它提供了若干个项目，每个项目可以完成独立的功能。开发者可以选择其中的一个或多个项目来使用其提供的功能，以完成开...","permalink":"/post/Java-Spring","photos":[],"count_time":{"symbolsCount":"34k","symbolsTime":"31 mins."},"categories":[{"name":"Java","slug":"Java","count":6,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":6,"path":"api/tags/Java.json"},{"name":"Web开发","slug":"Web开发","count":3,"path":"api/tags/Web开发.json"},{"name":"Spring","slug":"Spring","count":2,"path":"api/tags/Spring.json"}],"author":{"name":"Ac-Accelerator","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"一位计算机技术爱好者，大学在读，目前正在学习C++、Python、Java和计算机系统以及计算机视觉深度学习等相关知识，欢迎交流","socials":{"github":"https://github.com/Ac-Accelerator","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_31702515?spm=1000.2115.3001.5343","juejin":"","customs":{"qq":{"icon":"/svg/QQ.svg","link":"http://tool.gljlw.com/qq/?qq=2583832841"}}}},"feature":true}}